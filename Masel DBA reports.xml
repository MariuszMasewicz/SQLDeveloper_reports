<?xml version="1.0" encoding="UTF-8" ?>
<displays>
<folder>
	<name><![CDATA[Masel DBA reports]]></name>
	<tooltip><![CDATA[Masel DBA reports]]></tooltip>
	<description><![CDATA[ ]]></description>
		<display id="e925b2bd-018c-1000-800d-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[ASM]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select --INST_ID, GROUP_NUMBER, NAME, SECTOR_SIZE, LOGICAL_SECTOR_SIZE, BLOCK_SIZE, ALLOCATION_UNIT_SIZE, STATE, TYPE, TOTAL_MB, FREE_MB, HOT_USED_MB, COLD_USED_MB, REQUIRED_MIRROR_FREE_MB, USABLE_FILE_MB, OFFLINE_DISKS, COMPATIBILITY, DATABASE_COMPATIBILITY, VOTING_FILES, CON_ID
*
from gv$asm_diskgroup]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Disks]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$asm_disk a
--where a.GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Files]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$asm_alias a join gv$asm_file f on a.file_number=f.file_number and a.inst_id=f.inst_id
where a.GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null 
order by bytes desc, a.name, a.inst_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Disk stats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_DISK_STAT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Disk IO stats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_DISK_IOSTAT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Client]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_CLIENT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Diskgroup stats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_DISKGROUP_STAT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Template]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_TEMPLATE
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Operation]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$asm_operation a
--where a.GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
			</query>
		</display>
	</display>
	<display id="e9970c1f-018c-1000-802d-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[Scheduler]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select 
'SQLDEV:LINK:'
       || owner
       || ':'
       || 'SCHNEWJOB' -- object_type
       || ':'
       || job_name
       || ':'||job_name||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' AS details,
j.*,
'exec DBMS_SCHEDULER.enable(name=>''"'||owner||'"."'||job_name||'"'');' enable_job,
'exec DBMS_SCHEDULER.disable(name=>''"'||owner||'"."'||job_name||'"'', force => TRUE);' disable_job,
'exec DBMS_SCHEDULER.RUN_JOB(name=>''"'||owner||'"."'||job_name||'"'', USE_CURRENT_SESSION => FALSE);' run_job,
'exec DBMS_SCHEDULER.STOP_JOB(job_name=>''"'||owner||'"."'||job_name||'"'',  force => TRUE);' stop_job,
'exec DBMS_SCHEDULER.DROP_JOB(name=>''"'||owner||'"."'||job_name||'"'',  force => TRUE, defer => TRUE);' drop_job
from cdb_scheduler_jobs j
order by owner, job_name]]></sql>
		</query>
		<query>
			<sql><![CDATA[select 
'SQLDEV:LINK:'
       || owner
       || ':'
       || 'SCHNEWJOB' -- object_type
       || ':'
       || job_name
       || ':'||job_name||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' AS details,
j.*,
'exec DBMS_SCHEDULER.enable(name=>''"'||owner||'"."'||job_name||'"'');' enable_job,
'exec DBMS_SCHEDULER.disable(name=>''"'||owner||'"."'||job_name||'"'', force => TRUE);' disable_job,
'exec DBMS_SCHEDULER.RUN_JOB(name=>''"'||owner||'"."'||job_name||'"'', USE_CURRENT_SESSION => FALSE);' run_job,
'exec DBMS_SCHEDULER.STOP_JOB(job_name=>''"'||owner||'"."'||job_name||'"'',  force => TRUE);' stop_job,
'exec DBMS_SCHEDULER.DROP_JOB(name=>''"'||owner||'"."'||job_name||'"'',  force => TRUE, defer => TRUE);' drop_job
from dba_scheduler_jobs j
order by owner, job_name]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Running jobs]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_RUNNING_JOBS
--where ((OWNER=:OWNER and JOB_name=:JOB_NAME) or (:OWNER is null and :JOB_NAME is null))
order by owner, job_name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Job run details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_JOB_RUN_DETAILS
where ((OWNER=:OWNER and JOB_name=:JOB_NAME) or (:OWNER is null and :JOB_NAME is null))
order by LOG_ID desc --,LOG_DATE desc]]></sql>
				<binds>
					<bind id="OWNER">
						<prompt><![CDATA[OWNER]]></prompt>
						<tooltip><![CDATA[OWNER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="JOB_NAME">
						<prompt><![CDATA[JOB_NAME]]></prompt>
						<tooltip><![CDATA[JOB_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Job log]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_JOB_LOG
where ((OWNER=:OWNER and JOB_name=:JOB_NAME) or (:OWNER is null and :JOB_NAME is null))
order by LOG_ID desc --,LOG_DATE desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Global attribute]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_GLOBAL_ATTRIBUTE
order by ATTRIBUTE_NAME]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Instance parameters]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT * FROM GV$PARAMETER
--where 
--name like 'job%'
order by isdefault, name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Chart" enable="true">
			<name><![CDATA[Job duration and CPU]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<Y1AXIS_TITLE_TEXT><![CDATA[[s]]]></Y1AXIS_TITLE_TEXT>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<Y1AXIS_REFOBJ_COUNT><![CDATA[0]]></Y1AXIS_REFOBJ_COUNT>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<Y1AXIS_REFOBJ_LINE_VALUE><![CDATA[\]]></Y1AXIS_REFOBJ_LINE_VALUE>
				<DATA_MAP_COLUMNS><![CDATA[\,"ACTUAL_START_DATE","ACTUAL_START_DATE",]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y1AXIS_REFOBJ_VISIBLE><![CDATA[\]]></Y1AXIS_REFOBJ_VISIBLE>
				<DATA_MAP_COLNAMES><![CDATA[\,"ACTUAL_START_DATE","ADDITIONAL_INFO","BINARY_ERRORS","BINARY_OUTPUT","CPU_USED","CPU_USED_SEC","CREDENTIAL_NAME","CREDENTIAL_OWNER","DESTINATION","DESTINATION_OWNER","ERROR#","ERRORS","INSTANCE_ID","JOB_NAME","JOB_SUBNAME","LOG_DATE","LOG_ID","OUTPUT","OWNER","REQ_START_DATE","RUN_DURATION","RUN_DURATION_SEC","SESSION_ID","SLAVE_PID","STATUS"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,DURATION,CPU,]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[3]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<XAXIS_TITLE><![CDATA[false]]></XAXIS_TITLE>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"RUN_DURATION_SEC","CPU_USED_SEC",]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_REFOBJ_TEXT><![CDATA[\]]></Y1AXIS_REFOBJ_TEXT>
				<Y1AXIS_REFOBJ_WIDTH><![CDATA[\]]></Y1AXIS_REFOBJ_WIDTH>
				<Y1AXIS_TITLE><![CDATA[true]]></Y1AXIS_TITLE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				<Y1AXIS_REFOBJ_COLOR><![CDATA[\]]></Y1AXIS_REFOBJ_COLOR>
			</CustomValues>
			<query>
				<sql><![CDATA[select j.*, 
abs( extract( second from RUN_DURATION ) 
          + extract( minute from RUN_DURATION ) * 60 
          + extract( hour from RUN_DURATION ) * 60 * 60 
          + extract( day from RUN_DURATION ) * 60 * 60 * 24
            ) as RUN_DURATION_SEC,
abs( extract( second from CPU_USED ) 
          + extract( minute from CPU_USED ) * 60 
          + extract( hour from CPU_USED ) * 60 * 60 
          + extract( day from CPU_USED ) * 60 * 60 * 24
            ) as CPU_USED_SEC
from DBA_SCHEDULER_JOB_RUN_DETAILS j
where 
  (OWNER=:OWNER and JOB_name=:JOB_NAME) 
order by LOG_DATE]]></sql>
				<binds>
					<bind id="OWNER">
						<prompt><![CDATA[OWNER]]></prompt>
						<tooltip><![CDATA[OWNER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="JOB_NAME">
						<prompt><![CDATA[JOB_NAME]]></prompt>
						<tooltip><![CDATA[JOB_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[AutoTasks]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select a.* ,
'exec DBMS_AUTO_TASK_ADMIN.ENABLE (client_name  => '''||client_name||''', operation    => NULL, window_name  => NULL);' as enable,
'exec DBMS_AUTO_TASK_ADMIN.DISABLE (client_name  => '''||client_name||''', operation    => NULL, window_name  => NULL);' as disable
from DBA_AUTOTASK_CLIENT a]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[AutoStatsExecutions]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_AUTO_STAT_EXECUTIONS]]></sql>
			</query>
		</display>
	</display>
	<display id="e9974232-018c-1000-802e-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[Longops]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select sysdate, 
       inst_id, 
       sid, 
       serial#, 
       OPNAME,
       sofar,
       decode(totalwork,0,9999999999,totalwork) as totalwork, 
       trunc((sofar/decode(totalwork,0,9999999999,totalwork))*100) as percent_done, 
       round(TIME_REMAINING/60,1) as "MINUTES_REMAINING"  
from gv$session_longops 
where sofar<>totalwork 
order by inst_id, sid, serial#]]></sql>
		</query>
	</display>
	<display id="ea0dfa57-018c-1000-8030-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[Autotasks]]></name>
		<description><![CDATA[Details on 11g Autotasks (Stats and Advisors)]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT *
  FROM dba_autotask_client
order by client_name]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT *
FROM cdb_autotask_client
order by client_name, con_id]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[History]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select *
  FROM dba_autotask_job_history
 where client_name like :CLIENT_NAME
 ORDER BY job_start_time DESC]]></sql>
			</query>
			<query>
				<sql><![CDATA[select *
  FROM cdb_autotask_job_history
 where ((client_name = :CLIENT_NAME or :CLIENT_NAME is null) and (con_id=:CON_ID or :CON_ID is null))
 ORDER BY job_start_time DESC, con_id]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Job History]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_autotask_job_history
 WHERE client_name = :CLIENT_NAME
 ORDER BY job_start_time DESC]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT *
  FROM cdb_autotask_job_history
 WHERE ((client_name = :CLIENT_NAME or :CLIENT_NAME is null) and (con_id=:CON_ID or :CON_ID is null))
 ORDER BY job_start_time DESC, con_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Window History]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_autotask_window_history
 ORDER BY window_start_time DESC]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT *
  FROM cdb_autotask_window_history
 ORDER BY window_start_time DESC, con_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Program]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[vertical]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT * FROM DBA_SCHEDULER_PROGRAMS
 WHERE UPPER( program_name ) IN ( SELECT UPPER( TASK_NAME ) FROM dba_autotask_task WHERE client_name = :CLIENT_NAME )]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT * FROM cdb_SCHEDULER_PROGRAMS
 WHERE UPPER( program_name ) IN ( SELECT UPPER( TASK_NAME ) FROM cdb_autotask_task WHERE client_name = :CLIENT_NAME )]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Tasks]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_autotask_task
 WHERE client_name = :CLIENT_NAME]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT *
  FROM cdb_autotask_task
 WHERE client_name = :CLIENT_NAME]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="ea0e2821-018c-1000-8031-ac120052d4bc" type="" style="plsql-dbms_output" enable="true">
		<name><![CDATA[Log Switch Heat Map]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
		</CustomValues>
		<query>
			<sql><![CDATA[-- David Mann
-- http://ba6.us
-- 24-JUL-2012

-- Archived Log Heat Map for past 31 Days
-- Requires access to v$archived_log
-- Spool output to file and view with browser 
-- or use SQL Developer PL/SQL DBMS_OUTPUT report type

-- I tried to use a scripted stylesheet but SQL Dev wouldn't cooperate so
-- that is my excuse for all of the ugly inline CSS. For now :) 

DECLARE
  -- How many days of log history to show?
  myHist CONSTANT NUMBER := 31;
  ----------------------------------------
  myMax NUMBER;
  myDBName VARCHAR2(16);
  myInstanceName VARCHAR2(100);
  myHostName VARCHAR2(100);

  FUNCTION DataCell ( P_Value NUMBER, P_Max NUMBER) RETURN VARCHAR2 IS
   myReturn VARCHAR2(128);
   myColorVal NUMBER;
   myColorHex VARCHAR2(16);
  BEGIN

    myColorVal := ROUND( 255-FLOOR(255 * (P_VALUE / P_MAX)));
    myColorHex := LPAD(TRIM(TO_CHAR(myColorVal, 'XX')) ,2,'0');
    
    IF P_Value = P_Max THEN
      myColorHex := '00';
    END IF;
    

    myReturn := '<TD STYLE="background-color: #FF'||
                myColorHex||
                myColorHex||
                '; font-family: monospace">'||P_Value||'</TD>';


    RETURN myReturn;
  END DataCell;

BEGIN

  DBMS_OUTPUT.ENABLE(100000);

  SELECT ROUND(MAX(COUNT(*)))
    INTO myMax
    FROM v$log_history 
  WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
  GROUP BY TO_CHAR(first_time,'YYYY-MM-DD HH24');
  
  SELECT NAME INTO myDBName FROM V$DATABASE;
  SELECT INSTANCE_NAME, HOST_NAME INTO myInstanceName, myHostName FROM V$INSTANCE;

  DBMS_OUTPUT.PUT_LINE('<HTML>');
  DBMS_OUTPUT.PUT_LINE('<H1>Archived Log Heat Map - Past '||myHist||' days</H1>');
  DBMS_OUTPUT.PUT_LINE('<P>Host: '||myHostName||' Database : '||myDBName||' Instance: '||myInstanceName||'</P>');
  DBMS_OUTPUT.PUT_LINE('<TABLE>');
  DBMS_OUTPUT.PUT_LINE('<TR>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">Date / Hour</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">00</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">01</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">02</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">03</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">04</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">05</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">06</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">07</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">08</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">09</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">10</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">11</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">12</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">13</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">14</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">15</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">16</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">17</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">18</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">19</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">20</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">21</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">22</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">23</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">0-24</TD>');
  DBMS_OUTPUT.PUT_LINE('<TR>');

  FOR cur IN (

    select trunc(first_time) AS Day,
    sum(DECODE(to_char(first_time, 'HH24'), '00', 1, 0)) AS "00",
    sum(DECODE(to_char(first_time, 'HH24'), '01', 1, 0)) AS "01",
    sum(DECODE(to_char(first_time, 'HH24'), '02', 1, 0)) AS "02",
    sum(DECODE(to_char(first_time, 'HH24'), '03', 1, 0)) AS "03",
    sum(DECODE(to_char(first_time, 'HH24'), '04', 1, 0)) AS "04",
    sum(DECODE(to_char(first_time, 'HH24'), '05', 1, 0)) AS "05",
    sum(DECODE(to_char(first_time, 'HH24'), '06', 1, 0)) AS "06",
    sum(DECODE(to_char(first_time, 'HH24'), '07', 1, 0)) AS "07",
    sum(DECODE(to_char(first_time, 'HH24'), '08', 1, 0)) AS "08",
    sum(DECODE(to_char(first_time, 'HH24'), '09', 1, 0)) AS "09",
    sum(DECODE(to_char(first_time, 'HH24'), '10', 1, 0)) AS "10",
    sum(DECODE(to_char(first_time, 'HH24'), '11', 1, 0)) AS "11",
    sum(DECODE(to_char(first_time, 'HH24'), '12', 1, 0)) AS "12",
    sum(DECODE(to_char(first_time, 'HH24'), '13', 1, 0)) AS "13",
    sum(DECODE(to_char(first_time, 'HH24'), '14', 1, 0)) AS "14",
    sum(DECODE(to_char(first_time, 'HH24'), '15', 1, 0)) AS "15",
    sum(DECODE(to_char(first_time, 'HH24'), '16', 1, 0)) AS "16",
    sum(DECODE(to_char(first_time, 'HH24'), '17', 1, 0)) AS "17",
    sum(DECODE(to_char(first_time, 'HH24'), '18', 1, 0)) AS "18",
    sum(DECODE(to_char(first_time, 'HH24'), '19', 1, 0)) AS "19",
    sum(DECODE(to_char(first_time, 'HH24'), '20', 1, 0)) AS "20",
    sum(DECODE(to_char(first_time, 'HH24'), '21', 1, 0)) AS "21",
    sum(DECODE(to_char(first_time, 'HH24'), '22', 1, 0)) AS "22",
    sum(DECODE(to_char(first_time, 'HH24'), '23', 1, 0)) AS "23",
    count(*) as "24h"
    FROM v$log_history
    WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
    GROUP BY trunc(first_time)
    ORDER BY TRUNC(FIRST_TIME) DESC
  )
  LOOP
    DBMS_OUTPUT.PUT_LINE('<TR>');
    DBMS_OUTPUT.PUT_LINE('<TD style="font-family: monospace; font-weight: bold; background-color:#DEDEDE">'||TO_CHAR(cur.Day,'YYYY-MM-DD:D')||'<EM></TD>');
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."00", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."01", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."02", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."03", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."04", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."05", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."06", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."07", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."08", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."09", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."10", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."11", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."12", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."13", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."14", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."15", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."16", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."17", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."18", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."19", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."20", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."21", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."22", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."23", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."24h", myMax) );
    DBMS_OUTPUT.PUT_LINE('</TR>');
  END LOOP;

  DBMS_OUTPUT.PUT_LINE('</TABLE>');
  DBMS_OUTPUT.PUT_LINE('</HTML>');


END;]]></sql>
		</query>
	</display>
	<display id="ea0ee2e6-018c-1000-8032-ac120052d4bc" type="" style="plsql-dbms_output" enable="true">
		<name><![CDATA[DBMS_STATS Report]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
		</CustomValues>
		<query>
			<sql><![CDATA[DECLARE  
  l_offset     INT := 1;
  l_theclob    CLOB;
BEGIN
  dbms_output.enable(1000000);
  select SYS.DBMS_STATS.REPORT_STATS_OPERATIONS(
         since => systimestamp - 1
       , until => systimestamp
       , detail_level => 'ALL'
       , format => 'HTML' ) as report
    into l_theclob
    from dual;
  loop  
        exit when l_offset > dbms_lob.getlength(l_theclob);  
        dbms_output.put_line( dbms_lob.substr( l_theclob, 255, l_offset ) );  
        l_offset := l_offset + 255;  
  end loop;  
END;]]></sql>
		</query>
	</display>
	<display id="ea0ff3b7-018c-1000-8034-ac120052d4bc" type="" style="Chart" enable="true">
		<name><![CDATA[FRA]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<Y1AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y1AXIS_SCALE_INCREMENT>
			<DATA_MAP_COLNAMES><![CDATA[\,"Claimed","Reclaimable","Unused"]]></DATA_MAP_COLNAMES>
			<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
			<STYLE><![CDATA[Default]]></STYLE>
			<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
			<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
			<PLOT_SERIES_OPTIONS_COLOR><![CDATA[\,-16737997,-3394816,-6710887,-16751002,-26368]]></PLOT_SERIES_OPTIONS_COLOR>
			<XAXIS_SCALE_INCREMENT><![CDATA[20.0]]></XAXIS_SCALE_INCREMENT>
			<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
			<PLOT_DATALABELS_SLICE_TYPE><![CDATA[PERCENT_VALUE]]></PLOT_DATALABELS_SLICE_TYPE>
			<PLOT_DATALABELS_SLICE_POSITION><![CDATA[OUTSIDE_SLICE_LINE]]></PLOT_DATALABELS_SLICE_POSITION>
			<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
			<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
			<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
			<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
			<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
			<TYPE><![CDATA[RING]]></TYPE>
			<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
			<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
			<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
		</CustomValues>
		<query>
			<sql><![CDATA[select NULL "FRA", 'Reclaimable' AS attr, ROUND(space_reclaimable/1024/1024/1024, 2) GB
  from v$recovery_file_dest def
union all
select NULL "FRA", 'Claimed', ROUND((space_used - space_reclaimable)/1024/1024/1024, 2)
  from v$recovery_file_dest def
union all
select NULL "FRA", 'Unused', ROUND((space_limit - space_used)/1024/1024/1024, 2)
  from v$recovery_file_dest def]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[FRA Summary]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select name, ROUND(SPACE_LIMIT/1024/1024/1024,2) "Space Limit (GB)", 
round(SPACE_USED/1024/1024/1024,2) "Used Space(GB)",
decode(nvl(space_used,0),0,0,round((space_used/space_limit) * 100)) pct_used,
round(SPACE_RECLAIMABLE/1024/1024/1024,2) "SPACE_RECLAIMABLE (GB)" ,
(select round(ESTIMATED_FLASHBACK_SIZE/1024/1024/1024,2) 
from V$FLASHBACK_DATABASE_LOG) "Estimated Space (GB)",
number_of_files as "Number of files"
from V$RECOVERY_FILE_DEST]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[FRA Usage]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from v$flash_recovery_area_usage
order by percent_space_used desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[FRA Parameters]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$parameter 
where name like 'db_recovery%' or name like 'db_flashback%'
order by inst_id, name]]></sql>
			</query>
		</display>
	</display>
	<display id="ea111e7e-018c-1000-8035-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[LongOps-Gauge]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username
     , OPNAME
     , sofar
     , decode(totalwork,0,9999999999,totalwork) as totalwork
     , trunc((sofar/decode(totalwork,0,9999999999,totalwork))*100) as percent_done
     , elapsed_seconds "Elapsed/s"
     , time_remaining "Remaining/s"
     , round(time_remaining/60/60,2) "Remaining/h"
     , message
     , sid, serial#, NVL( sql_id, '[NULL]' ) AS sql_id
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid
 
 /*
 select sysdate, 
       inst_id, 
       sid, 
       serial#, 
       OPNAME,
       sofar,
       decode(totalwork,0,9999999999,totalwork) as totalwork, 
       trunc((sofar/decode(totalwork,0,9999999999,totalwork))*100) as percent_done, 
       round(TIME_REMAINING/60,1) as "MINUTES_REMAINING"  
from gv$session_longops 
where sofar<>totalwork 
order by inst_id, sid, serial#
*/]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#
     , sql_hash_value
     --, NVL( sql_id, '[NULL]' ) AS sql_id
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#
     , sql_hash_value
     , sql_address
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#, NVL( sql_id, '[NULL]' ) AS sql_id
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
     , sql_exec_start, sql_plan_line_id, sql_exec_id
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Session Detail]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[vertical]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM gv$session
 WHERE sid = :SID
   AND serial# = :SERIAL#]]></sql>
				<binds>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Wait Summary]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT s.username
     , se.event
     , SUM( total_waits ) total_waits
     , ROUND( SUM( time_waited )/100, 2 ) "Time waited / s"
     , AVG( average_wait )*10 "avg_wait / ms"
     , MAX( se.wait_class ) wait_class
  FROM gv$session_event se
     , gv$session s
 WHERE s.sid      = :SID
   AND s.serial#  = :SERIAL#
   AND se.sid     = s.sid
   AND se.inst_id = s.inst_id
--   AND se.wait_class <> 'Idle'
--   AND s.username IS NOT NULL
 GROUP BY s.username, se.event
 ORDER BY MAX( DECODE( se.wait_class, 'Idle', 1, 0 )), "Time waited / s" DESC]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL-Detail]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[vertical]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from gv$sql where SQL_ID = :SQL_ID]]></sql>
			</query>
			<query>
				<sql><![CDATA[select * from gv$sql where HASH_VALUE = :SQL_HASH_VALUE]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Explain Plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[-- Displays SQL plans from all cluster nodes when on RAC.
-- Captured while still in memory. Metrics below are for ALL executions of each child cursor.
-- If STATISTICS_LEVEL was set to ALL at the time of the hard-parse then A-Rows column is populated.
SELECT RPAD('Inst: '||v.inst_id, 9)||' '||RPAD('Child: '||v.child_number, 11) inst_child, t.plan_table_output
  FROM gv$sql v
     , TABLE( DBMS_XPLAN.DISPLAY('gv$sql_plan_statistics_all', NULL, 'ADVANCED ALLSTATS ALL'
            , 'inst_id = '||v.inst_id||' AND sql_id = '''||v.sql_id||''' AND child_number = '||v.child_number)) t
 WHERE v.sql_id = NVL( :SQL_ID, 'NULL!' )
   AND v.loaded_versions > 0]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT child_number, id , lpad (' ', depth) || operation operation , options , object_name , optimizer , cost
  FROM V$SQL_PLAN 
 WHERE hash_value = :SQL_HASH_VALUE
   AND address = :SQL_ADDRESS
 ORDER BY child_number, id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Code" enable="true">
			<name><![CDATA[SQL-Monitor (Text)]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT CASE WHEN :SQL_ID = '[NULL]' THEN TO_CLOB( 'SQL_ID IS NULL' )
       ELSE dbms_sqltune.report_sql_monitor( type=>'TEXT', sql_id => :SQL_ID
          , SESSION_ID => :SID, SESSION_SERIAL => :SERIAL#, SQL_EXEC_ID => :SQL_EXEC_ID )
       END AS report
  FROM dual]]></sql>
			</query>
		</display>
		<display id="" type="" style="plsql-dbms_output" enable="true">
			<name><![CDATA[SQL-Monitor (HTML)]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[DECLARE
  l_report CLOB := dbms_sqltune.report_sql_monitor( type=>'HTML', sql_id => :SQL_ID
    , SESSION_ID => :SID, SESSION_SERIAL => :SERIAL#, SQL_EXEC_ID => :SQL_EXEC_ID );
  l_offset PLS_INTEGER := 1;
  l_length PLS_INTEGER := NVL(dbms_lob.getlength(l_report),0);
  l_chunk CONSTANT PLS_INTEGER := 8191;
BEGIN
  dbms_output.enable(NULL);
  --dbms_output.put_line('Len: '||l_length);
  WHILE l_offset < l_length LOOP
    --dbms_output.put_line('Off: '||l_offset);
    dbms_output.put_line(dbms_lob.substr( l_report, l_chunk, l_offset));
    l_offset := l_offset + l_chunk;
  END LOOP;
  --dbms_output.put_line('');
END;]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL-Monitor (Flash)]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT CASE WHEN :SQL_ID = '[NULL]' THEN TO_CLOB( 'SQL_ID IS NULL' )
       ELSE dbms_sqltune.report_sql_monitor( type=>'EM', sql_id => :SQL_ID
          , SESSION_ID => :SID, SESSION_SERIAL => :SERIAL#, SQL_EXEC_ID => :SQL_EXEC_ID )
       END AS report
  FROM dual]]></sql>
			</query>
		</display>
	</display>
	<display id="f806d94e-018c-1000-800b-0a00011a7638" type="" style="Table" enable="true">
		<name><![CDATA[Storage - summary]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT typ, con_id, Tablespace_LogGroup, SUM(gb) GB, sum(files) as files FROM
(
SELECT 'Datafiles' typ, con_id, tablespace_name Tablespace_LogGroup,  ROUND(  bytes/1024/1024/1024, 2 ) GB, 1 as files
  FROM cdb_data_files
UNION ALL
SELECT 'Tempfiles' typ, con_id, tablespace_name Tablespace_LogGroup, ROUND( bytes/1024/1024/1024, 2 ) GB, 1 as files
  FROM cdb_temp_files
UNION  ALL
SELECT 'Logfiles' typ, null, to_char(group#) Tablespace_LogGroup, ROUND( bytes*members/1024/1024/1024, 2 ) GB, members as files
  FROM v$log
UNION ALL
SELECT 'Controlfiles' typ, null, 'Controlfile' Tablespace_LogGroup, ROUND( BLOCK_SIZE*FILE_SIZE_BLKS/1024/1024/1024, 2 ) GB, 1 as files
  FROM v$controlfile
)
GROUP BY ROLLUP(typ, con_id, Tablespace_LogGroup)
order by typ, con_id, Tablespace_LogGroup, GB desc]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT typ, Tablespace_LogGroup, SUM(gb) GB, sum(files) as files FROM
(
SELECT 'Datafiles' typ, tablespace_name Tablespace_LogGroup,  ROUND(  bytes/1024/1024/1024, 2 ) GB, 1 as files
  FROM dba_data_files
UNION ALL
SELECT 'Tempfiles' typ, tablespace_name Tablespace_LogGroup, ROUND( bytes/1024/1024/1024, 2 ) GB, 1 as files
  FROM dba_temp_files
UNION  ALL
SELECT 'Logfiles' typ, to_char(group#) Tablespace_LogGroup, ROUND( bytes*members/1024/1024/1024, 2 ) GB, members as files
  FROM v$log
UNION ALL
SELECT 'Controlfiles' typ, 'Controlfile' Tablespace_LogGroup, ROUND( BLOCK_SIZE*FILE_SIZE_BLKS/1024/1024/1024, 2 ) GB, 1 as files
  FROM v$controlfile
)
GROUP BY ROLLUP(typ, Tablespace_LogGroup)
order by typ, Tablespace_LogGroup, GB desc]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DataFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
FROM dba_data_files
where TABLESPACE_NAME= :TABLESPACE_LOGGROUP OR :TABLESPACE_LOGGROUP IS NULL
ORDER BY TABLESPACE_NAME, FILE_ID]]></sql>
				<binds>
					<bind id="TABLESPACE_LOGGROUP">
						<prompt><![CDATA[TABLESPACE_LOGGROUP]]></prompt>
						<tooltip><![CDATA[TABLESPACE_LOGGROUP]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<query>
				<sql><![CDATA[SELECT *
FROM cdb_data_files
where ((TABLESPACE_NAME= :TABLESPACE_LOGGROUP OR :TABLESPACE_LOGGROUP IS NULL) and (CON_ID= :CON_ID OR :CON_ID IS NULL))
ORDER BY CON_ID, TABLESPACE_NAME, FILE_ID]]></sql>
				<binds>
					<bind id="TABLESPACE_LOGGROUP">
						<prompt><![CDATA[TABLESPACE_LOGGROUP]]></prompt>
						<tooltip><![CDATA[TABLESPACE_LOGGROUP]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[TempFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_temp_files
where TABLESPACE_NAME= :TABLESPACE_LOGGROUP OR :TABLESPACE_LOGGROUP IS NULL
ORDER BY TABLESPACE_NAME, FILE_ID]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT *
  FROM cdb_temp_files
where ((TABLESPACE_NAME= :TABLESPACE_LOGGROUP OR :TABLESPACE_LOGGROUP IS NULL) and (CON_ID= :CON_ID OR :CON_ID IS NULL))
ORDER BY con_id, TABLESPACE_NAME, FILE_ID]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[LogGroups]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM v$log
where ( group#= TO_NUMBER(REGEXP_SUBSTR(:TABLESPACE_LOGGROUP, '^\d+')) OR TO_NUMBER(REGEXP_SUBSTR(:TABLESPACE_LOGGROUP, '^\d+')) IS NULL)
ORDER BY group#, thread#]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[LogFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM v$logfile
where ( group#= TO_NUMBER(REGEXP_SUBSTR(:TABLESPACE_LOGGROUP, '^\d+')) OR TO_NUMBER(REGEXP_SUBSTR(:TABLESPACE_LOGGROUP, '^\d+')) IS NULL)
ORDER BY group#, MEMBER]]></sql>
			</query>
		</display>
		<display id="" type="" style="plsql-dbms_output" enable="true">
			<name><![CDATA[LogSwitchHeatMap]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[-- David Mann
-- http://ba6.us
-- 24-JUL-2012

-- Archived Log Heat Map for past 31 Days
-- Requires access to v$archived_log
-- Spool output to file and view with browser 
-- or use SQL Developer PL/SQL DBMS_OUTPUT report type

-- I tried to use a scripted stylesheet but SQL Dev wouldn't cooperate so
-- that is my excuse for all of the ugly inline CSS. For now :) 

DECLARE
  -- How many days of log history to show?
  myHist CONSTANT NUMBER := 31;
  ----------------------------------------
  myMax NUMBER;
  myDBName VARCHAR2(16);
  myInstanceName VARCHAR2(100);
  myHostName VARCHAR2(100);

  FUNCTION DataCell ( P_Value NUMBER, P_Max NUMBER) RETURN VARCHAR2 IS
   myReturn VARCHAR2(128);
   myColorVal NUMBER;
   myColorHex VARCHAR2(16);
  BEGIN

    myColorVal := ROUND( 255-FLOOR(255 * (P_VALUE / P_MAX)));
    myColorHex := LPAD(TRIM(TO_CHAR(myColorVal, 'XX')) ,2,'0');
    
    IF P_Value = P_Max THEN
      myColorHex := '00';
    END IF;
    

    myReturn := '<TD STYLE="background-color: #FF'||
                myColorHex||
                myColorHex||
                '; font-family: monospace">'||P_Value||'</TD>';


    RETURN myReturn;
  END DataCell;

BEGIN

  DBMS_OUTPUT.ENABLE(100000);

  SELECT ROUND(MAX(COUNT(*)))
    INTO myMax
    FROM v$log_history 
  WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
  GROUP BY TO_CHAR(first_time,'YYYY-MM-DD HH24');
  
  SELECT NAME INTO myDBName FROM V$DATABASE;
  SELECT INSTANCE_NAME, HOST_NAME INTO myInstanceName, myHostName FROM V$INSTANCE;

  DBMS_OUTPUT.PUT_LINE('<HTML>');
  DBMS_OUTPUT.PUT_LINE('<H1>Archived Log Heat Map - Past '||myHist||' days</H1>');
  DBMS_OUTPUT.PUT_LINE('<P>Host: '||myHostName||' Database : '||myDBName||' Instance: '||myInstanceName||'</P>');
  DBMS_OUTPUT.PUT_LINE('<TABLE>');
  DBMS_OUTPUT.PUT_LINE('<TR>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">Date / Hour</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">00</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">01</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">02</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">03</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">04</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">05</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">06</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">07</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">08</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">09</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">10</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">11</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">12</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">13</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">14</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">15</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">16</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">17</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">18</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">19</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">20</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">21</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">22</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">23</TD>');
  DBMS_OUTPUT.PUT_LINE('<TR>');

  FOR cur IN (

    select trunc(first_time) AS Day,
    sum(DECODE(to_char(first_time, 'HH24'), '00', 1, 0)) AS "00",
    sum(DECODE(to_char(first_time, 'HH24'), '01', 1, 0)) AS "01",
    sum(DECODE(to_char(first_time, 'HH24'), '02', 1, 0)) AS "02",
    sum(DECODE(to_char(first_time, 'HH24'), '03', 1, 0)) AS "03",
    sum(DECODE(to_char(first_time, 'HH24'), '04', 1, 0)) AS "04",
    sum(DECODE(to_char(first_time, 'HH24'), '05', 1, 0)) AS "05",
    sum(DECODE(to_char(first_time, 'HH24'), '06', 1, 0)) AS "06",
    sum(DECODE(to_char(first_time, 'HH24'), '07', 1, 0)) AS "07",
    sum(DECODE(to_char(first_time, 'HH24'), '08', 1, 0)) AS "08",
    sum(DECODE(to_char(first_time, 'HH24'), '09', 1, 0)) AS "09",
    sum(DECODE(to_char(first_time, 'HH24'), '10', 1, 0)) AS "10",
    sum(DECODE(to_char(first_time, 'HH24'), '11', 1, 0)) AS "11",
    sum(DECODE(to_char(first_time, 'HH24'), '12', 1, 0)) AS "12",
    sum(DECODE(to_char(first_time, 'HH24'), '13', 1, 0)) AS "13",
    sum(DECODE(to_char(first_time, 'HH24'), '14', 1, 0)) AS "14",
    sum(DECODE(to_char(first_time, 'HH24'), '15', 1, 0)) AS "15",
    sum(DECODE(to_char(first_time, 'HH24'), '16', 1, 0)) AS "16",
    sum(DECODE(to_char(first_time, 'HH24'), '17', 1, 0)) AS "17",
    sum(DECODE(to_char(first_time, 'HH24'), '18', 1, 0)) AS "18",
    sum(DECODE(to_char(first_time, 'HH24'), '19', 1, 0)) AS "19",
    sum(DECODE(to_char(first_time, 'HH24'), '20', 1, 0)) AS "20",
    sum(DECODE(to_char(first_time, 'HH24'), '21', 1, 0)) AS "21",
    sum(DECODE(to_char(first_time, 'HH24'), '22', 1, 0)) AS "22",
    sum(DECODE(to_char(first_time, 'HH24'), '23', 1, 0)) AS "23"
    FROM v$log_history
    WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
    GROUP BY trunc(first_time)
    ORDER BY TRUNC(FIRST_TIME) DESC
  )
  LOOP
    DBMS_OUTPUT.PUT_LINE('<TR>');
    DBMS_OUTPUT.PUT_LINE('<TD style="font-family: monospace; font-weight: bold; background-color:#DEDEDE">'||TO_CHAR(cur.Day,'YYYY-MM-DD')||'<EM></TD>');
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."00", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."01", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."02", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."03", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."04", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."05", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."06", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."07", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."08", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."09", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."10", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."11", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."12", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."13", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."14", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."15", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."16", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."17", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."18", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."19", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."20", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."21", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."22", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."23", myMax) );
    DBMS_OUTPUT.PUT_LINE('</TR>');
  END LOOP;

  DBMS_OUTPUT.PUT_LINE('</TABLE>');
  DBMS_OUTPUT.PUT_LINE('</HTML>');


END;]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[LogSwitchHistory]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$log_history 
order by sequence# desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[ArchivedLogs]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from 
GV$ARCHIVED_LOG 
order by recid desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[ControlFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM v$controlfile
ORDER by name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DiagTraceFile]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$DIAG_TRACE_FILE]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Tablespaces]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select t.* , 
  'DROP TABLESPACE "'||t.name||'" INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;' as drop_tablespace,
  'ALTER TABLESPACE "'||t.name||'" READ ONLY;' as read_only,
  'ALTER TABLESPACE "'||t.name||'" READ WRITE;' as read_write,
  'ALTER TABLESPACE "'||t.name||'" OFFLINE IMMEDIATE;' as go_offline,
  'ALTER TABLESPACE "'||t.name||'" ONLINE;' as go_online,
  'ALTER TABLESPACE "'||t.name||'" ADD DATAFILE ''/path/name'' SIZE 100K AUTOEXTEND ON NEXT 100K MAXSIZE UNLIMITED' as add_datafile
from gv$tablespace t
order by name]]></sql>
			</query>
			<query>
				<sql><![CDATA[select t.* , 
  'DROP TABLESPACE "'||t.name||'" INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;' as drop_tablespace,
  'ALTER TABLESPACE "'||t.name||'" READ ONLY;' as read_only,
  'ALTER TABLESPACE "'||t.name||'" READ WRITE;' as read_write,
  'ALTER TABLESPACE "'||t.name||'" OFFLINE IMMEDIATE;' as go_offline,
  'ALTER TABLESPACE "'||t.name||'" ONLINE;' as go_online,
  'ALTER TABLESPACE "'||t.name||'" ADD DATAFILE ''/path/name'' SIZE 100K AUTOEXTEND ON NEXT 100K MAXSIZE UNLIMITED' as add_datafile
from gv$tablespace t
order by con_id, name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[TablespacesSizing]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT m.con_id, m.tablespace_name,
    'SQLDEV:GAUGE:0:100:0:0:'||round(max(m.used_percent))  as PERC_to_max_tbs_size_gauge,
    round(max(m.used_percent),1) PERC_to_max_tbs_size,
    'SQLDEV:GAUGE:0:100:0:0:'||round(max(m.used_space*t.block_size)*100/(sum(d.bytes)*count(distinct d.file_id)/count(d.file_id)),1)  as PER_to_actual_tbs_size_gauge,
    round(max(m.used_space*t.block_size)*100/(sum(d.bytes)*count(distinct d.file_id)/count(d.file_id)),1) PER_to_actual_tbs_size,
    round(max(m.tablespace_size*t.block_size/1024/1024),1) max_tbs_size,
    round((sum(d.bytes)*count(distinct d.file_id))/count(d.file_id)/1024/1024,1) actual_tbs_size,
    round(max(m.used_space*t.block_size/1024/1024),1) USED,
    round(max((m.tablespace_size-m.used_space)*t.block_size/1024/1024),1) FREE_to_max_tbs_size,
    round(((sum(d.bytes)*count(distinct d.file_id))/count(d.file_id)-max(m.used_space*t.block_size))/1024/1024,1) FREE_to_actual_tbs_size,    
    count(distinct d.file_id) number_of_files,
    max(to_number(tt.warning_value)) WARN,
    max(to_number(tt.critical_value)) CRIT,
    max(case when m.used_percent>tt.warning_value OR m.used_percent>tt.critical_value then 'NO!' else 'OK' end) "OK?"
FROM  cdb_tablespace_usage_metrics m, cdb_tablespaces t, cdb_data_files d, cdb_thresholds tt
WHERE (m.tablespace_name=t.tablespace_name and m.con_id=t.con_id)
AND (d.tablespace_name=t.tablespace_name and d.con_id=t.con_id)
and tt.metrics_name='Tablespace Space Usage'
and tt.object_name is null
GROUP BY m.con_id, m.tablespace_name
order by 1,2]]></sql>
			</query>
			<query>
				<sql><![CDATA[SELECT m.tablespace_name,
    'SQLDEV:GAUGE:0:100:0:0:'||round(max(m.used_percent))  as PERC_to_max_tbs_size_gauge,
    round(max(m.used_percent),1) PERC_to_max_tbs_size,
    'SQLDEV:GAUGE:0:100:0:0:'||round(max(m.used_space*t.block_size)*100/(sum(d.bytes)*count(distinct d.file_id)/count(d.file_id)),1)  as PER_to_actual_tbs_size_gauge,
    round(max(m.used_space*t.block_size)*100/(sum(d.bytes)*count(distinct d.file_id)/count(d.file_id)),1) PER_to_actual_tbs_size,
    round(max(m.tablespace_size*t.block_size/1024/1024),1) max_tbs_size,
    round((sum(d.bytes)*count(distinct d.file_id))/count(d.file_id)/1024/1024,1) actual_tbs_size,
    round(max(m.used_space*t.block_size/1024/1024),1) USED,
    round(max((m.tablespace_size-m.used_space)*t.block_size/1024/1024),1) FREE_to_max_tbs_size,
    round(((sum(d.bytes)*count(distinct d.file_id))/count(d.file_id)-max(m.used_space*t.block_size))/1024/1024,1) FREE_to_actual_tbs_size,    
    count(distinct d.file_id) number_of_files,
    max(to_number(tt.warning_value)) WARN,
    max(to_number(tt.critical_value)) CRIT,
    max(case when m.used_percent>tt.warning_value OR m.used_percent>tt.critical_value then 'NO!' else 'OK' end) "OK?"
FROM  dba_tablespace_usage_metrics m, dba_tablespaces t, dba_data_files d, dba_thresholds tt
WHERE (m.tablespace_name=t.tablespace_name)
AND (d.tablespace_name=t.tablespace_name)
and tt.metrics_name='Tablespace Space Usage'
and tt.object_name is null
GROUP BY m.tablespace_name
order by 1]]></sql>
			</query>
		</display>
	</display>
	<display id="1a264ca7-018d-1000-8009-0abcf0220279" type="" style="Table" enable="true">
		<name><![CDATA[SQL]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select --s.sql_id, 
       s.* from gv$sql s
order by sql_id, last_load_time]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[CursorPlan_all]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select *
   from 
   table(dbms_xplan.display_cursor(:SQL_ID,
                                  :CHILD_NUMBER, 'ALL')) t
where :SQL_ID is not null]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CHILD_NUMBER">
						<prompt><![CDATA[CHILD_NUMBER]]></prompt>
						<tooltip><![CDATA[CHILD_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[CursorPlan_adaptive]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select *
   from 
   table(dbms_xplan.display_cursor(:SQL_ID,
                                  :CHILD_NUMBER, 'ADAPTIVE')) t
where :SQL_ID is not null]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLBindCapture]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_BIND_CAPTURE s 
--left join GV$SQL_BIND_METADATA m on utl_raw.compare(s.address,m.address)=0
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
order by s.POSITION]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLCsHistogram]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_CS_HISTOGRAM s 
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
order by bucket_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLOptimizerEnv]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_OPTIMIZER_ENV s 
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
order by id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLPLanStatistics]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_PLAN_STATISTICS s 
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
--order by id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLPLanStatisticsAll]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_PLAN_STATISTICS_ALL s 
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
order by id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLRedirection]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select u.username, s.* 
from GV$SQL_REDIRECTION s join all_users u on s.PARSING_USER_ID=u.USER_ID
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CHILD_NUMBER">
						<prompt><![CDATA[CHILD_NUMBER]]></prompt>
						<tooltip><![CDATA[CHILD_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLReoptimizatioHints]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_REOPTIMIZATION_HINTS s 
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
order by hint_id]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CHILD_NUMBER">
						<prompt><![CDATA[CHILD_NUMBER]]></prompt>
						<tooltip><![CDATA[CHILD_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLSharedCursor]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_SHARED_CURSOR s 
where s.sql_id=:SQL_ID and s.CHILD_NUMBER=:CHILD_NUMBER
--order by id]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CHILD_NUMBER">
						<prompt><![CDATA[CHILD_NUMBER]]></prompt>
						<tooltip><![CDATA[CHILD_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLWorkarea]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_WORKAREA s 
where (s.sql_id=:SQL_ID  )
--and (s.address=:ADDRESS  ) 
and s.CHILD_NUMBER=:CHILD_NUMBER
order by operation_id]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CHILD_NUMBER">
						<prompt><![CDATA[CHILD_NUMBER]]></prompt>
						<tooltip><![CDATA[CHILD_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLWorkareaActive]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_WORKAREA_ACTIVE s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
--and (s.address=:ADDRESS  or :ADDRESS is null)
order by operation_id]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLWorkareaHistogram]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQL_WORKAREA_HISTOGRAM
order by 1,2]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLArea]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQLAREA s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
and (s.address=:ADDRESS  or :ADDRESS is null)
--order by operation_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLAreaPlanHash]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQLAREA_PLAN_HASH s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
and (s.address=:ADDRESS  or :ADDRESS is null)
--order by operation_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLStats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQLSTATS s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
and (s.address=:ADDRESS  or :ADDRESS is null)]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLStatsPlanHash]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQLSTATS_PLAN_HASH s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
and (s.address=:ADDRESS  or :ADDRESS is null)]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLText]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQLTEXT s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
and (s.address=:ADDRESS  or :ADDRESS is null)
order by piece]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLTextWithNewlines]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$SQLTEXT_WITH_NEWLINES s 
where (s.sql_id=:SQL_ID  or :SQL_ID is null)
and (s.address=:ADDRESS  or :ADDRESS is null)
order by piece]]></sql>
			</query>
		</display>
	</display>
	<display id="1c15bfd6-018d-1000-8001-c0a838012ded" type="" style="Table" enable="true">
		<name><![CDATA[Diagnostic]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select * 
from GV$DIAG_INFO
--order by INST_ID,NAME]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DiagAlertExt]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select *
from   v$diag_alert_ext 
order by ORIGINATING_TIMESTAMP desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DiagAppTraceFile]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$DIAG_APP_TRACE_FILE
order by MODIFY_TIME desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DiagDirExt]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from V$DIAG_DIR_EXT]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DiagTraceFile]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$DIAG_TRACE_FILE
order by MODIFY_TIME desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[DiagTraceFileContents]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from V$DIAG_TRACE_FILE_CONTENTS
--order by MODIFY_TIME desc]]></sql>
			</query>
		</display>
	</display>
	<display id="364e946f-018d-1000-8001-ac19014670d5" type="" style="Table" enable="true">
		<name><![CDATA[Active Sessions Monitoring]]></name>
		<description><![CDATA[anjulsahu@gmail.com]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT sess.*,
         'ALTER SYSTEM KILL SESSION '''||sess.sid
         || ','
         || sess.serial#
         || ',@'
         || sess.inst_id||''' IMMEDIATE;'
            Kill_command
    FROM GV$SESSION SESS
--ORDER BY LAST_CALL_ET DESC;]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Monitor Plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select lpad(' ',plan_depth)||plan_operation||' '||plan_options||nullif(' - '||plan_object_owner||'.'||plan_object_name||' ('||plan_object_type||')',' - . ()') operation,
        plan_cost p_cost,plan_cardinality p_card,output_rows outp_rows,starts,physical_read_requests R_iops, 
        round(physical_read_bytes/1000000,1) R_MB,round(physical_write_bytes/1000000,1) W_MB, 
        round(workarea_mem/1000000,1) pga_MB,round(workarea_tempseg/1000000,1) temp_mb, 
        nullif(plan_partition_start||'-'||plan_partition_stop,'-') part
from gv$sql_plan_monitor where key=:KEY
order by plan_line_id]]></sql>
				<binds>
					<bind id="KEY">
						<prompt><![CDATA[KEY]]></prompt>
						<tooltip><![CDATA[KEY]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL ID Performance]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select    s.instance_number inst_id,
  ss.snap_id,
     ss.sql_id,
    to_char(s.begin_interval_time, 'Dy DD-MON HH24:MI') snap_time,
    SS.PLAN_HASH_VALUE phv,
    ss.executions_delta execs,
    round(ss.buffer_gets_delta/decode(ss.executions_delta,0,1,ss.executions_delta),0) LIO,  
    round(ss.disk_reads_delta/decode(ss.executions_delta,0,1,ss.executions_delta),0) PIO,
   round((ss.iowait_delta/1000000)/decode(ss.executions_delta,0,1,ss.executions_delta),3) IOTIME,
   round((ss.ccwait_delta/1000000)/decode(ss.executions_delta,0,1,ss.executions_delta),3) CCTIME,
     round((ss.clwait_delta/1000000)/decode(ss.executions_delta,0,1,ss.executions_delta),3) CLTIME,
   round((ss.apwait_delta/1000000)/decode(ss.executions_delta,0,1,ss.executions_delta),3) ATIME,
    round((ss.cpu_time_delta/1000000)/decode(ss.executions_delta,0,1,ss.executions_delta),3) CPUTIME,
   round ((ss.elapsed_time_delta/1000000)/decode(ss.executions_delta,0,1,ss.executions_delta),3) ETIME
 --   round(percent_rank() over (order by ceil(ss.elapsed_time_delta/ss.executions_delta))*100, 2) as percentile
from     dba_hist_snapshot    s,
    dba_hist_sqlstat    ss
where    ss.dbid = s.dbid
and    ss.instance_number = s.instance_number
and    ss.snap_id = s.snap_id
and    ss.sql_id = :SQL_ID
and    ss.executions_delta > 0
and    s.begin_interval_time >= sysdate - 7
order by s.snap_id]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQLAREA]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[--- performance from gv$sqlarea
  SELECT inst_id,
         sql_id ||' ('||hash_value||')' sql_id,
         plan_hash_value || ' ('||nvl(sql_plan_baseline,'No SPM')||')' plan,
         nullif(executions,0) "Executions",
         ROUND (elapsed_time / (1e6 * nullif(executions,0)), 3) "ela_per_exec (s)",
         version_count "Versions",
         PARSE_CALLS,
         sharable_mem,
         LOADS,
         S.INVALIDATIONS,
         round(fetches/nullif(executions,0),2) F_to_E_Ratio,
         round(buffer_gets/nullif(executions,0),0) gets_per_exec,
         ROUND (CONCURRENCY_WAIT_TIME / 1000000 / nullif(executions,0), 4) CONC_WT,
         ROUND (APPLICATION_WAIT_TIME / 1000000 / nullif(executions,0), 2) APPL_WT,
         ROUND (CLUSTER_WAIT_TIME / 1000000 / nullif(executions,0), 2) CLUSTER_WT,
         ROUND (USER_IO_WAIT_TIME / 1000000 / nullif(executions,0), 2) UIO_WT,
         ROUND (cpu_time / 1000000 / nullif(executions,0), 2) CPU_T,
         -- round(elapsed_time/1000000,2) ELA_T,
         ROUND (PHYSICAL_READ_BYTES / 1024 / 1024 / nullif(executions,0), 2) "PHYRD(M)",
         ROUND (IO_INTERCONNECT_BYTES / 1024 / 1024 / nullif(executions,0), 2)
            "IO_INTERCONNECT(M)",
         ROUND (PHYSICAL_WRITE_BYTES / 1024 / 1024, 2) "PHYWR(M)",
         rows_processed,
         TO_CHAR (last_active_time, 'MM/DD/YYYY HH24:MI:SS') "last active time",
         S.LAST_LOAD_TIME,
         SQL_PROFILE
    FROM gv$sqlarea s
   WHERE sql_id = :SQL_ID
ORDER BY 1;]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Binds]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select name, value_string from gv$sql_bind_capture where sql_id=:SQL_ID]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL_TEXT]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select sql_fulltext from gv$sql where sql_id=:SQL_ID and inst_id=:INST_ID]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="INST_ID">
						<prompt><![CDATA[INST_ID]]></prompt>
						<tooltip><![CDATA[INST_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="plsql-dbms_output" enable="true">
			<name><![CDATA[Session Details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[DECLARE
  v_sid number;
  v_inst_id number;
  v_obj varchar2(100) := null;
  s gv$session%ROWTYPE;
  p gv$process%ROWTYPE;
BEGIN
  begin
    select s.sid, s.inst_id into v_sid, v_inst_id
    from   gv$process p, gv$session s
    where  p.addr     = s.paddr
    and p.inst_id = s.inst_id
    and  s.sid = :SID and s.inst_id = :INST_ID;
  exception
    when no_data_found then
      dbms_output.put_line('Unable to find  SID!!!');
      return;
    when others then
      dbms_output.put_line(sqlerrm);
      return;
  end;

  select * into s from gv$session where sid  = v_sid and inst_id = v_inst_id;
  select * into p from gv$process where addr = s.paddr and inst_id = v_inst_id;
  
begin
  SELECT   nvl(owner
                 || '.'
                 || object_name
                 || ' ('
                 || DBMS_ROWID.rowid_create (1,
                                             s.row_wait_obj#,
                                             s.row_wait_file#,
                                             s.row_wait_block#,
                                             s.row_wait_row#)
                 || ')', ' ') into v_obj
            FROM dba_objects
           WHERE object_id = s.row_wait_obj#; 
exception
  when others then
    null;
end;
    
 

  dbms_output.put_line('<pre>');
  dbms_output.put_line('INST_ID/SID/Serial  : '|| s.sid||','||s.serial#||'@'||s.inst_id);
  dbms_output.put_line('Foreground  : '|| 'PID: '||s.process||' - '||s.program);
  dbms_output.put_line('Shadow      : '|| 'PID: '||p.spid||' - '||p.program);
  dbms_output.put_line('Terminal    : '|| s.terminal || '/ ' || p.terminal);
  dbms_output.put_line('OS User     : '|| s.osuser||' on '||s.machine);
  dbms_output.put_line('Ora User    : '|| s.username);
  dbms_output.put_line('Status Flags: '|| s.status||' '||s.server||' '||s.type);
  dbms_output.put_line('Tran Active : '|| nvl(s.taddr, 'NONE'));
  dbms_output.put_line('Login Time  : '|| to_char(s.logon_time, 'Dy HH24:MI:SS'));
  dbms_output.put_line('Last Call   : '|| to_char(sysdate-(s.last_call_et/60/60/24), 'Dy DD-MON-YYYY HH24:MI:SS') || ' - ' || to_char(s.last_call_et/60, '999999.9') || ' min');
  dbms_output.put_line('Lock/ Latch : '|| nvl(s.lockwait, 'NONE')||'/ '||nvl(p.latchwait, 'NONE'));
  dbms_output.put_line('Latch Spin  : '|| nvl(p.latchspin, 'NONE'));
  dbms_output.put_line('Event  : '|| s.event||' --- p1='||s.p1||' ('||s.p1text ||') p2='||s.p2||' ('||s.p2text||') p3='||s.p3||' ('||s.p3text||')');
  dbms_output.put_line('SQL Id  : '|| s.sql_id||' - Prev:' ||s.prev_sql_id );
  dbms_output.put_line('Object     : '|| v_obj );
  dbms_output.put_line('Module/Action      : '|| s.module ||', '||s.action);
  dbms_output.put_line('Client Info : '|| s.client_info ||',' ||s.client_identifier );
   dbms_output.put_line('Session Waits:');
  for c1 in ( select * from gv$session_wait where sid = s.sid and inst_id = s.inst_id) loop
    dbms_output.put_line(chr(9)||c1.state||': '||c1.event);
  end loop;
  dbms_output.put_line('</pre>');
END;]]></sql>
				<binds>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="INST_ID">
						<prompt><![CDATA[INST_ID]]></prompt>
						<tooltip><![CDATA[INST_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Blocking Session]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select blocking_session||'('||blocking_inst_id||')' blocking_sid, sql_id, SQL_OPNAME, round(100* ratio_to_report(count(*)) over (),2) "Activity%" 
from gv$active_session_history 
where SESSION_ID = :SID
and SESSION_SERIAL# = :SERIAL#
and INST_ID = :INST_ID
and (blocking_session is not null and blocking_inst_id is not null)
group by blocking_session||'('||blocking_inst_id||')', sql_id, SQL_OPNAME
order by 4 desc]]></sql>
				<binds>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="INST_ID">
						<prompt><![CDATA[INST_ID]]></prompt>
						<tooltip><![CDATA[INST_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Session Waits]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select decode(session_state,'ON CPU', 'ON CPU', 'WAITING',event) Event ,  
round(100 * ratio_to_report(count(*)) over (),1) "Activity%" 
from GV$ACTIVE_SESSION_HISTORY
where inst_id=:INST_ID and session_id=:SID
group by decode(session_state,'ON CPU', 'ON CPU', 'WAITING',event) 
order by 2 desc]]></sql>
				<binds>
					<bind id="INST_ID">
						<prompt><![CDATA[INST_ID]]></prompt>
						<tooltip><![CDATA[INST_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Plan Cursor]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from table(dbms_xplan.display_cursor(:SQL_ID,:SQL_CHILD_NUMBER,'TYPICAL OUTLINE ALLSTATS LAST +PEEKED_BINDS') )]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_CHILD_NUMBER">
						<prompt><![CDATA[SQL_CHILD_NUMBER]]></prompt>
						<tooltip><![CDATA[SQL_CHILD_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SessionsSummary]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select inst_id, username, machine, module,  count(*) 
 from gv$session
 group by inst_id, username, machine, module
 order by inst_id, username, machine, module]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SessionDetails]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$session
where inst_id=:INST_ID and sid = :SID and serial#=:SERIAL#]]></sql>
				<binds>
					<bind id="INST_ID">
						<prompt><![CDATA[INST_ID]]></prompt>
						<tooltip><![CDATA[INST_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<folder>
		<name><![CDATA[RAC]]></name>
		<tooltip><![CDATA[RAC]]></tooltip>
		<description><![CDATA[ ]]></description>
			<display id="36604380-018d-1000-8003-ac19014670d5" type="" style="Chart" enable="true">
			<name><![CDATA[ RAC Sessions(Machine) ]]></name>
			<description><![CDATA[ ]]></description>
			<tooltip><![CDATA[ ]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<LEGEND><![CDATA[true]]></LEGEND>
				<THREED><![CDATA[true]]></THREED>
				<GRID><![CDATA[true]]></GRID>
				<STYLE><![CDATA[Default]]></STYLE>
				<GRADIENT><![CDATA[true]]></GRADIENT>
				<TYPE><![CDATA[BAR_HORIZ_CLUST]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[
select gi.iname "Instance", case grouping(gi.iname) when 1 then 'Total' else case grouping(gs.machine) when 1 then 'Total '||gi.iname else gs.machine end end "Machine", count(1) "Sessions" from gv$session gs, ( select inst_id, instance_name||'@'||host_name iname from gv$instance ) gi where gs.username is not null and gs.inst_id = gi.inst_id group by rollup(gi.iname,gs.machine)
]]></sql>
			</query>
		</display>
		<display id="36606461-018d-1000-8004-ac19014670d5" type="" style="Table" enable="true">
			<name><![CDATA[Cluster_Database_Health]]></name>
			<description><![CDATA[(c) anjulsahu@gmail.com	]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[with c1 as (select  /*+ materialize */ 	INST_ID, 
	sum(DECODE(USERNAME,NULL,1,0)) BACKGROUND, 
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'ACTIVE',1,0))) ACTIVE,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'ACTIVE',DECODE(sign(LAST_CALL_ET-3600),1,1,0),0))) ACTIVE_1H,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'ACTIVE',DECODE(sign(LAST_CALL_ET-14400),1,1,0),0))) ACTIVE_4H,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'ACTIVE',DECODE(sign(LAST_CALL_ET-86400),1,1,0),0))) ACTIVE_24H,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'INACTIVE',1,0))) INACTIVE,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'INACTIVE',DECODE(sign(LAST_CALL_ET-3600),1,1,0),0))) INACTIVE_1H,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'INACTIVE',DECODE(sign(LAST_CALL_ET-14400),1,1,0),0))) INACTIVE_4H,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'INACTIVE',DECODE(sign(LAST_CALL_ET-86400),1,1,0),0))) INACTIVE_24H,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'KILLED',1,0))) KILLED,
	sum(DECODE(USERNAME,NULL,0,DECODE(STATUS,'CACHED',1,'SNIPED',1,0))) CACHED_SNIPED
from gv$session
group by INST_ID
order by INST_ID)
select c1.INST_ID, c1.BACKGROUND,c1.ACTIVE,c1.ACTIVE_1H,c1.ACTIVE_4H,c1.ACTIVE_24H,c1.INACTIVE,c1.INACTIVE_1H,INACTIVE_4H,c1.INACTIVE_24H,c1.KILLED,c1.CACHED_SNIPED
from c1, gv$instance i
where c1.INST_ID=i.INST_ID
order by 1]]></sql>
			</query>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[OS Users]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<PLOT_VGRID_COLOR.TRANSPARENT><![CDATA[false]]></PLOT_VGRID_COLOR.TRANSPARENT>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<GRADIENT><![CDATA[true]]></GRADIENT>
					<PLOT_VGRID_COLOR.COLOR><![CDATA[-3355444]]></PLOT_VGRID_COLOR.COLOR>
					<PLOT_DATALABELS_SLICE_POSITION><![CDATA[OUTSIDE_SLICE_LINE_IF]]></PLOT_DATALABELS_SLICE_POSITION>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<DATA_MAP_COLUMNS><![CDATA[\,"INSTANCE_STATUS"]]></DATA_MAP_COLUMNS>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<PLOT_HGRID_COLOR.COLOR><![CDATA[-3355444]]></PLOT_HGRID_COLOR.COLOR>
					<PLOT_DATALABELS><![CDATA[true]]></PLOT_DATALABELS>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[BAR_VERT_CLUST]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<DATA_MAP_COLNAMES><![CDATA[\,"COUNT(*)","OSUSER","STATUS"]]></DATA_MAP_COLNAMES>
					<DATA_MAP_SERIES><![CDATA[\,"OSUSER"]]></DATA_MAP_SERIES>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<GRID><![CDATA[true]]></GRID>
					<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
					<STYLE><![CDATA[Autumn]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[CENTER]]></TITLE_ALIGNMENT>
					<XAXIS_SCALE_INCREMENT><![CDATA[20.0]]></XAXIS_SCALE_INCREMENT>
					<PLOT_DATALABELS_SLICE_TYPE><![CDATA[PERCENT_VALUE]]></PLOT_DATALABELS_SLICE_TYPE>
					<TITLE_TEXT><![CDATA[Session Status by OSUSER]]></TITLE_TEXT>
					<PLOT_HGRID_COLOR.TRANSPARENT><![CDATA[false]]></PLOT_HGRID_COLOR.TRANSPARENT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<PLOT_HGRID><![CDATA[true]]></PLOT_HGRID>
					<THREED><![CDATA[false]]></THREED>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<DATA_MAP_VALUES><![CDATA[\,"COUNT(*)"]]></DATA_MAP_VALUES>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<TITLE><![CDATA[true]]></TITLE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[CENTER]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[select inst_id||'-'||status as instance_status ,nvl(osuser,'background') as osuser, count(*)
from gv$session
where inst_id=:INST_ID or :INST_ID is null
group by inst_id||'-'||status, nvl(osuser,'background')
order by inst_id||'-'||status, nvl(osuser,'background')]]></sql>
					<binds>
						<bind id="INST_ID">
							<prompt><![CDATA[INST_ID]]></prompt>
							<tooltip><![CDATA[INST_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[Oracle Users]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<DATA_MAP_COLUMNS><![CDATA[\,"INSTANCE_STATUS"]]></DATA_MAP_COLUMNS>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<PLOT_DATALABELS><![CDATA[true]]></PLOT_DATALABELS>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[BAR_VERT_CLUST]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<DATA_MAP_COLNAMES><![CDATA[\,"COUNT(*)","STATUS","USERNAME"]]></DATA_MAP_COLNAMES>
					<DATA_MAP_SERIES><![CDATA[\,"USERNAME"]]></DATA_MAP_SERIES>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<GRID><![CDATA[true]]></GRID>
					<STYLE><![CDATA[Autumn]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
					<TITLE_TEXT><![CDATA[Session Status by USERNAME]]></TITLE_TEXT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<DATA_MAP_VALUES><![CDATA[\,"COUNT(*)"]]></DATA_MAP_VALUES>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<TITLE><![CDATA[true]]></TITLE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[select inst_id||'-'||status as instance_status ,nvl(username, 'background') as username, count(*)
from gv$session
where inst_id=:INST_ID or :INST_ID is null
group by inst_id||'-'||status, nvl(username, 'background')
order by inst_id||'-'||status, nvl(username, 'background')]]></sql>
					<binds>
						<bind id="INST_ID">
							<prompt><![CDATA[INST_ID]]></prompt>
							<tooltip><![CDATA[INST_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[Recovery Tx]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select inst_id, usn, state, undoblockstotal "Total", undoblocksdone "Done", undoblockstotal-undoblocksdone "ToDo",
decode(cputime,0,'unknown',sysdate+(((undoblockstotal-undoblocksdone) / (undoblocksdone / cputime)) / 86400)) "Estimated time to complete"
from gv$fast_start_transactions]]></sql>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[Blocking Sessions]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT
  /*+ ordered */
  b.blocking_session ,
  b.blocking_instance ,
  b.sid ,
  b.inst_id ,
  b.serial# ,
  c.type ,
  c.request ,
  DECODE(c.request,0,0,c.ctime) ,
  DECODE(c.block,0,'W','B') ,
  c.ctime ,
  b.osuser ,
  b.username ,
  b.program ,
  b.module ,
  b.action ,
  b.machine ,
  b.service_name ,
  b.status ,
  sql.sql_text ,
  sql.sql_id ,
  i.instance_name
FROM
  gv$lock c,
  gv$session b ,
  gv$sqlarea SQL,
  gv$instance i
WHERE
  c.inst_id     >0
AND B.SID       = C.SID
AND b.inst_id   =c.inst_id
AND b.USERNAME IS NOT NULL
AND c.type     != 'AE'
AND request     >0
AND b.inst_id   =sql.inst_id(+)
AND b.sql_id    =sql.sql_id (+)
AND i.inst_id   =c.inst_id
ORDER BY
  DECODE(c.block,0,'W','B')]]></sql>
				</query>
			</display>
			<display id="" type="" style="Script" enable="true">
				<name><![CDATA[Lock Details]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
				</CustomValues>
				<query>
					<sql><![CDATA[-- locks.sql locks and enqueue blocks for 11g
-- Luca Jan 2012


set feedback off
col oracle_username for a15
col owner for a15
col object_name for a15
col inst_sid_s# for a13
col username for a14
col obj_lck for a18
col blk_info for a14
col f_blk_info for a14
col event for a30
col s_wt for 99999
col chain_signature for a65
col Wsecs for 99999

prompt DML locks from current instance (dba_dml_locks)

select session_id sid, owner,name,mode_held,mode_requested from dba_dml_locks;

prompt
prompt sessions with lockwait from gv$session

select inst_id||' '||sid||','||serial# inst_sid_s#, username, row_wait_obj#||','||row_wait_block#||','||row_wait_row# obj_lck,
       blocking_session_Status||' '||blocking_instance||','||blocking_session blk_info,
       final_blocking_session_Status||' '||final_blocking_instance||','||final_blocking_session f_blk_info,
       event, seconds_in_wait s_wt
from gv$session
where lockwait is not null
order by inst_id;

prompt
prompt waitchains (all events)

select instance||' '||sid||','||sess_serial# inst_sid_s#, chain_signature,num_waiters wrs#,in_wait_secs Wsecs,row_wait_obj#||','||row_wait_block# obj_lck,
       blocker_is_valid||' '||blocker_instance||','||blocker_sid blk_info
from v$wait_chains
where in_wait='TRUE' and blocker_is_valid='TRUE'
order by instance,chain_signature;

prompt
prompt final blockers from gv$session (all events)

select final_blocking_instance f_blk_inst, final_blocking_session f_blk_sess, event, sql_id, row_wait_obj#||','||row_wait_block# obj_lck, count(*) num_blocked, max(wait_time_micro) max_wait_musec
from gv$session
where final_blocking_session_Status='VALID'
group by final_blocking_instance, final_blocking_session, event, sql_id, row_wait_obj#||','||row_wait_block#
order by 1;


/*

prompt global blocked locks

select * from  GV$GLOBAL_BLOCKED_LOCKS    ;

prompt TX locks

select * from gv$transaction_enqueue;

prompt waiting sessions

select inst_id,sid,process,username,row_wait_obj#,LOCKWAIT,blocking_instance blk_inst, blocking_session blk_sid
from gv$session
where lockwait is not null;

prompt blocking sessions

select sid,username,row_wait_obj#,row_wait_block#,row_wait_row#,blocking_session  from gv$session a where row_wait_obj#<>0 and blocking_Session is not null order by 2,1;

prompt blockers from gv$Lock

select inst_id,sid,type,ctime LOCK_TIME,id1,id2
from gv$lock
where block =1;


*/

set feedback on]]></sql>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[Longops]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select inst_id||'_'||sid||' '||serial# inst_sid_ser,username,time_remaining remaining,elapsed_seconds elapsed, sql_id,
       sql_plan_operation||'-'||sql_plan_options||', '||sql_plan_line_id exec_plan,
       message
from gv$session_longops
where time_remaining>0]]></sql>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[Top Events Last Min]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select "Time",  inst_id, name, RR "Pct",
 rpad('*',round(RR,0),'*') graph
from (
select "Time",
        inst_id,
        name,
        round(T_waited/100,1) "Waited_tot_sec",
        round(100 * (ratio_to_report( T_waited) over( partition by inst_id)), 2) as RR,
        row_number() over (partition by inst_id order by T_waited desc ) as  rr2
from (
  select to_char(min(begin_time),'hh24:mi:ss') "Time",
       em.inst_id,en.name,
       sum(em.time_waited_fg) T_waited_fg, sum(em.time_waited) T_waited,sum(wait_count) W_count, sum(wait_count_fg) W_count_fg,
       sum(decode(em.wait_count, 0,0,round(em.time_waited/em.wait_count,2))) T_per_wait,
       sum(decode(em.wait_count_fg, 0,0,round(em.time_waited_fg/em.wait_count_fg,2))) T_per_wait_fg
  from gv$eventmetric em, v$event_name en
  where em.event#=en.event#
      and en.wait_class <>'Idle'
  group by em.inst_id,en.name,em.event_id
  order by T_waited_fg desc
  ))
  where RR2<6
  order by  inst_id, RR2]]></sql>
				</query>
			</display>
			<display id="" type="" style="Script" enable="true">
				<name><![CDATA[ASH last hour Wait]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
				</CustomValues>
				<query>
					<sql><![CDATA[PRO ASH REPORT for last 1 hour
SET LINES 200 PAGES 100

col timed_event for a60 trunc
col samples for 999999
col percent for 99.9
col dummy_01 for a20

WITH
events AS (
SELECT /*+ MATERIALIZE NO_MERGE */
       CASE h.session_state WHEN 'ON CPU' THEN h.session_state ELSE h.wait_class||' "'||h.event||'"' END timed_event,
       COUNT(*) samples
  FROM gv$active_session_history h
 WHERE 'Y' = 'Y'
   AND CAST(h.sample_time AS DATE) > SYSDATE - 1/24
 GROUP BY
       CASE h.session_state WHEN 'ON CPU' THEN h.session_state ELSE h.wait_class||' "'||h.event||'"' END
 ORDER BY
       2 DESC
),
total AS (
SELECT SUM(samples) samples,
       SUM(CASE WHEN ROWNUM > 15 THEN samples ELSE 0 END) others
  FROM events
)
SELECT e.timed_event,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE ROWNUM <= 15
   AND ROUND(100 * e.samples / t.samples, 1) > 0.1
 UNION ALL
SELECT 'Others',
       others samples,
       ROUND(100 * others / samples, 1) percent,
       NULL dummy_01
  FROM total
 WHERE others > 0
   AND ROUND(100 * others / samples, 1) > 0.1;
   
   
PRO TOP SQLs
col sql_id for a20
col sql_text for a100 trunc

WITH
events AS (
SELECT /*+ MATERIALIZE NO_MERGE */
       NVL(h.sql_id, 'null') sql_id,
       COUNT(*) samples
  FROM gv$active_session_history h
 WHERE 'Y' = 'Y'
   AND CAST(h.sample_time AS DATE) > sysdate - 1/24
   AND sql_id IS NOT NULL
 GROUP BY
       h.sql_id
 ORDER BY
       2 DESC
),
total AS (
SELECT SUM(samples) samples,
       SUM(CASE WHEN ROWNUM > 15 THEN samples ELSE 0 END) others
  FROM events
)
SELECT e.sql_id,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL sql_text
	   --(SELECT v2.sql_text FROM gv$sql v2 WHERE v2.sql_id = e.sql_id AND ROWNUM = 1) sql_text
  FROM events e,
       total t
 WHERE ROWNUM <= 15
   AND ROUND(100 * e.samples / t.samples, 1) > 0.1
 UNION ALL
SELECT 'Others',
       others samples,
       ROUND(100 * others / samples, 1) percent,
       NULL sql_text
  FROM total
 WHERE others > 0
   AND ROUND(100 * others / samples, 1) > 0.1;]]></sql>
				</query>
			</display>
			<display id="" type="" style="Script" enable="true">
				<name><![CDATA[Undo Usage]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
				</CustomValues>
				<query>
					<sql><![CDATA[PROMPT ################# Undo Usage By Status and Size #################

col tablespace_name format a20
select tablespace_name, status,round(sum (bytes)/1024/1024,2) "UNDO in (MB)" from DBA_UNDO_EXTENTS group by tablespace_name,status order by status;


PROMPT ################# Undo Usage By Object #################

set feedback off
Set lines 500 pages 999
col "OS_User" format a10
col "DB_User" format a10
col  Schema  format a10
col Object_Name format a25
col type for a10
col Records for a10
col RBS format a15
col TABLESPACE_NAME format a10
select substr(a.os_user_name,1,15)    "OS_User"
, substr(a.oracle_username,1,8) "DB_User"
, substr(b.owner,1,8)  "Schema"
, substr(b.object_name,1,30)    "Object_Name"
, substr(b.object_type,1,10)    "Type"
, substr(c.segment_name,1,15)  "RBS"
,TABLESPACE_NAME
, substr(d.used_urec,1,12)      "Records" ,
e.sid,e.serial#
from gv$locked_object      a
, dba_objects b
, dba_rollback_segs  c
, gv$transaction      d
, gv$session e
where   a.object_id =  b.object_id
and a.xidusn    =  c.segment_id
and a.xidusn    =  d.xidusn
and a.xidslot   =  d.xidslot
and d.addr      =  e.taddr;


prompt 
prompt  ############## Long Running Query History ############## 
prompt 

col end_time head "Date"
col maxquerysqlid head "SQL ID"
col runawayquerysqlid format a15 head "Runaway SQL ID"
col results format a35 word_wrapped head "Space Issues"
col status head "Status"
col newret head "Tuned Down|Retention"

select end_time, maxquerysqlid, runawayquerysqlid, status,
        decode(status,1,'Slot Active',4,'Reached Best Retention',5,'Reached Best Retention',
                    8, 'Runaway Query',9,'Runaway Query-Active',10,'Space Pressure',
                   11,'Space Pressure Currently',
                   16, 'Tuned Down (to undo_retention) due to Space Pressure', 
                   17,'Tuned Down (to undo_retention) due to Space Pressure-Active',
                   18, 'Tuning Down due to Runaway', 19, 'Tuning Down due to Runaway-Active',
                   28, 'Runaway tuned down to last tune down value',
                   29, 'Runaway tuned down to last tune down value',
                   32, 'Max Tuned Down - Not Auto-Tuning',
                   33, 'Max Tuned Down - Not Auto-Tuning (Active)',
                   37, 'Max Tuned Down - Not Auto-Tuning (Active)', 
                   38, 'Max Tuned Down - Not Auto-Tuning', 
                   39, 'Max Tuned Down - Not Auto-Tuning (Active)', 
                   40, 'Max Tuned Down - Not Auto-Tuning', 
                   41, 'Max Tuned Down - Not Auto-Tuning (Active)', 
                   42, 'Max Tuned Down - Not Auto-Tuning', 
                   44, 'Max Tuned Down - Not Auto-Tuning', 
                   45, 'Max Tuned Down - Not Auto-Tuning (Active)', 
                   'Other ('||status||')') Results, spcprs_retention NewRet
from sys.wrh$_undostat
where status > 1
/



prompt 
prompt  ############## Details on Long Run Queries ############## 
prompt 

col sql_fulltext head "SQL Text"
Col sql_id heading "SQL ID"

select sql_id, sql_fulltext, last_load_time "Last Load", 
round(elapsed_time/60/60/24,0) "Elapsed Days" 
from gv$sql where sql_id in 
(select maxquerysqlid from sys.wrh$_undostat 
where status > 1)
/]]></sql>
				</query>
			</display>
		</display>
		<display id="76f5233a-018f-1000-8014-ac1900c08aaa" type="" style="Chart" enable="true">
			<name><![CDATA[Wait Class History - RAC]]></name>
			<description><![CDATA[Average Active Sessions by Wait Class (1h)]]></description>
			<tooltip><![CDATA[Average Active Sessions by Wait Class (1h)]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<Y1AXIS_TITLE_TEXT><![CDATA[Average Active Sessions]]></Y1AXIS_TITLE_TEXT>
				<PLOT_HGRID_WIDTH><![CDATA[THINNEST]]></PLOT_HGRID_WIDTH>
				<TITLE_FONT.COLOR><![CDATA[-13231103]]></TITLE_FONT.COLOR>
				<TITLE_FONT.SIZE><![CDATA[14]]></TITLE_FONT.SIZE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<TITLE_FONT.POSTURE><![CDATA[false]]></TITLE_FONT.POSTURE>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[BAR_VERT_STACK]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNEST]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<STYLE><![CDATA[Earth]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[CENTER]]></TITLE_ALIGNMENT>
				<TITLE_FONT.WEIGHT><![CDATA[true]]></TITLE_FONT.WEIGHT>
				<TITLE_TEXT><![CDATA[Average Active Sessions by Instance]]></TITLE_TEXT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<TITLE_FONT.UNDERLINE><![CDATA[false]]></TITLE_FONT.UNDERLINE>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<TITLE_FONT.NAME><![CDATA[SansSerif]]></TITLE_FONT.NAME>
				<TITLE><![CDATA[true]]></TITLE>
				<Y1AXIS_TITLE><![CDATA[true]]></Y1AXIS_TITLE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNEST]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select TIME, INSTANCE_NAME, AAS from(
select to_char( h.END_TIME, 'dd.mm. hh24:mi' ) TIME
     , i.INSTANCE_NAME
     , ROUND( h.VALUE / 100, 2 ) AAS
  from gv$sysmetric_history h
     , GV$INSTANCE i
 where METRIC_ID = 2123  -- "DB Time [csec/s]"
   and h.INST_ID = i.INST_ID
 order by TIME desc, i.INST_ID
)
 where rownum < 1001
 order by TIME, INSTANCE_NAME]]></sql>
			</query>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[Wait Class History - Instance]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<Y1AXIS_TITLE_TEXT><![CDATA[Average Active Sessions]]></Y1AXIS_TITLE_TEXT>
					<PLOT_HGRID_WIDTH><![CDATA[THINNEST]]></PLOT_HGRID_WIDTH>
					<TITLE_FONT.COLOR><![CDATA[-12565927]]></TITLE_FONT.COLOR>
					<TITLE_FONT.SIZE><![CDATA[14]]></TITLE_FONT.SIZE>
					<PLOT_DATATIPS_CUMULATIVE_VALUE><![CDATA[true]]></PLOT_DATATIPS_CUMULATIVE_VALUE>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[30.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<NUMBER_FORMATS.TYPE><![CDATA[NUMBER]]></NUMBER_FORMATS.TYPE>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<GRADIENT><![CDATA[false]]></GRADIENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<TITLE_FONT.POSTURE><![CDATA[false]]></TITLE_FONT.POSTURE>
					<NUMBER_FORMATS.NEGATIVE_NUMBER_FORMAT><![CDATA[BRACKETED]]></NUMBER_FORMATS.NEGATIVE_NUMBER_FORMAT>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[210.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[BAR_VERT_STACK]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<STYLE><![CDATA[Default]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[CENTER]]></TITLE_ALIGNMENT>
					<TITLE_FONT.WEIGHT><![CDATA[true]]></TITLE_FONT.WEIGHT>
					<NUMBER_FORMATS.CURRENCY_SYMBOL><![CDATA[DOLLARS]]></NUMBER_FORMATS.CURRENCY_SYMBOL>
					<TITLE_TEXT><![CDATA[Average Active Sessions by Wait Class ]]></TITLE_TEXT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<NUMBER_FORMATS.DECIMAL_PLACES><![CDATA[1]]></NUMBER_FORMATS.DECIMAL_PLACES>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<TITLE_FONT.UNDERLINE><![CDATA[false]]></TITLE_FONT.UNDERLINE>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<TITLE_FONT.NAME><![CDATA[SansSerif]]></TITLE_FONT.NAME>
					<NUMBER_FORMATS.SCALE_FACTOR><![CDATA[NONE]]></NUMBER_FORMATS.SCALE_FACTOR>
					<TITLE><![CDATA[true]]></TITLE>
					<Y1AXIS_TITLE><![CDATA[true]]></Y1AXIS_TITLE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNEST]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[select * from (
with WC as(
select distinct e.WAIT_CLASS, e.WAIT_CLASS_ID
  from v$event_name e
)
select to_char( END_TIME, 'dd.mm. hh24:mi' ) time
     , wc.WAIT_CLASS
     , round( AVERAGE_WAITER_COUNT, 2 ) AVERAGE_WAITER_COUNT
     --, INST_ID
  from GV$WAITCLASSMETRIC_HISTORY h
     , WC
 where h.WAIT_CLASS_ID = wc.WAIT_CLASS_ID
   and wc.WAIT_CLASS <> 'Idle'
   and h.INST_ID = ( select i.INST_ID from GV$INSTANCE i where i.INSTANCE_NAME = :INSTANCE_NAME )
union all
select to_char( END_TIME, 'dd.mm. hh24:mi' ) time
     , '_CPU' as WAIT_CLASS
     , round( sh.VALUE / 100, 2 ) AVERAGE_WAITER_COUNT
  from GV$SYSMETRIC_HISTORY sh
 where sh.METRIC_ID = 2075 -- "CPU Usage Per Sec" in csec/s
   and sh.INST_ID = ( select i.INST_ID from GV$INSTANCE i where i.INSTANCE_NAME = :INSTANCE_NAME )
)
where rownum < 1000
order by TIME, nlssort(WAIT_CLASS, 'nls_sort=BINARY')]]></sql>
					<binds>
						<bind id="INSTANCE_NAME">
							<prompt><![CDATA[INSTANCE_NAME]]></prompt>
							<tooltip><![CDATA[INSTANCE_NAME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
		</display>
	</folder>
	<display id="36acad05-018d-1000-800f-ac19014670d5" type="" style="Table" enable="true">
		<name><![CDATA[Users]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select u.*, 
  'alter user "'||u.username||'" PASSWORD EXPIRE ACCOUNT LOCK;' as lock_account, 
  'alter user "'||u.username||'" ACCOUNT UNLOCK;' as unlock_account,
  'alter user "'||u.username||'" identified by "'||replace(dbms_random.string('a', 14), ' ', 'x')||'";' as change_password,
  'alter session set current_schema = "'||u.username||'";' as change_schema,
  'DROP USER "'||u.username||'" CASCADE;' as drop_user
from dba_users u
order by username]]></sql>
		</query>
		<query>
			<sql><![CDATA[select 
'SQLDEV:LINK:'
       || username
       || ':'
       || 'USER' -- object_type
       || ':'
       || username
       || ':'||username||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' AS details,
u.*, 
  'alter user "'||u.username||'" PASSWORD EXPIRE ACCOUNT LOCK;' as lock_account, 
  'alter user "'||u.username||'" ACCOUNT UNLOCK;' as unlock_account,
  'alter user "'||u.username||'" identified by "'||replace(dbms_random.string('a', 14), ' ', 'x')||'";' as change_password,
  'alter session set current_schema = "'||u.username||'";' as change_schema,
  'DROP USER "'||u.username||'" CASCADE;' as drop_user
from cdb_users u
order by username, con_id]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[UserProfile]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from dba_profiles
where profile=:PROFILE or :PROFILE is null
order by profile, resource_type, resource_name]]></sql>
			</query>
			<query>
				<sql><![CDATA[select * 
from cdb_profiles
where ((profile=:PROFILE or :PROFILE is null) and (CON_ID=:CON_ID or :CON_ID is null))
order by profile, resource_type, resource_name, CON_ID]]></sql>
				<binds>
					<bind id="PROFILE">
						<prompt><![CDATA[PROFILE]]></prompt>
						<tooltip><![CDATA[PROFILE]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[ObjectPrivileges]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_TAB_PRIVS
where grantee=:USERNAME or :USERNAME is null
order by grantee, owner, table_name, privilege]]></sql>
			</query>
			<query>
				<sql><![CDATA[select * 
from cdb_TAB_PRIVS
where ((grantee=:USERNAME or :USERNAME is null) and (CON_ID=:CON_ID or :CON_ID is null)) 
order by grantee, owner, table_name, privilege, con_id]]></sql>
				<binds>
					<bind id="USERNAME">
						<prompt><![CDATA[USERNAME]]></prompt>
						<tooltip><![CDATA[USERNAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SystemPrivileges]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SYS_PRIVS
where grantee=:USERNAME or :USERNAME is null
order by grantee, privilege]]></sql>
			</query>
			<query>
				<sql><![CDATA[select * 
from cdb_SYS_PRIVS
where ((grantee=:USERNAME or :USERNAME is null) and (CON_ID=:CON_ID or :CON_ID is null)) 
order by grantee, privilege, con_id]]></sql>
				<binds>
					<bind id="USERNAME">
						<prompt><![CDATA[USERNAME]]></prompt>
						<tooltip><![CDATA[USERNAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Roles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_ROLE_PRIVS
where grantee=:USERNAME or :USERNAME is null
order by grantee, granted_role]]></sql>
			</query>
			<query>
				<sql><![CDATA[select * 
from cdb_ROLE_PRIVS
where ((grantee=:USERNAME or :USERNAME is null) and (CON_ID=:CON_ID or :CON_ID is null)) 
order by grantee, granted_role, con_id]]></sql>
				<binds>
					<bind id="USERNAME">
						<prompt><![CDATA[USERNAME]]></prompt>
						<tooltip><![CDATA[USERNAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[All Privileges]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select
  lpad(' ', 2*level) || granted_role "User, his roles and privileges"
from
  (
  /* THE USERS */
    select 
      null     grantee, 
      username granted_role
    from 
      cdb_users where ((username=:USERNAME or :USERNAME is null) and (CON_ID=:CON_ID or :CON_ID is null))
  /* THE ROLES TO ROLES RELATIONS */ 
  union
    select 
      grantee,
      granted_role
    from
      cdb_role_privs
    where
      (CON_ID=:CON_ID or :CON_ID is null)
  /* THE ROLES TO PRIVILEGE RELATIONS */ 
  union
    select
      grantee,
      privilege
    from
      cdb_sys_privs
    where 
    (CON_ID=:CON_ID or :CON_ID is null)
  )
start with grantee is null
connect by grantee = prior granted_role]]></sql>
				<binds>
					<bind id="USERNAME">
						<prompt><![CDATA[USERNAME]]></prompt>
						<tooltip><![CDATA[USERNAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<query>
				<sql><![CDATA[select
  lpad(' ', 2*level) || granted_role "User, his roles and privileges"
from
  (
  /* THE USERS */
    select 
      null     grantee, 
      username granted_role
    from 
      dba_users where (username=:USERNAME or :USERNAME is null) 
  /* THE ROLES TO ROLES RELATIONS */ 
  union
    select 
      grantee,
      granted_role
    from
      dba_role_privs
  /* THE ROLES TO PRIVILEGE RELATIONS */ 
  union
    select
      grantee,
      privilege
    from
      dba_sys_privs
  )
start with grantee is null
connect by grantee = prior granted_role]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[UserObjects]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select 
'SQLDEV:LINK:'
     ||owner
     ||':'
     ||object_type
     ||':'
     ||object_name
     ||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' details,
     o.* 
from CDB_OBJECTS o
where (con_id=:CON_ID or :CON_ID is null) and owner=:USERNAME
order by owner, object_name, object_id]]></sql>
				<binds>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="USERNAME">
						<prompt><![CDATA[USERNAME]]></prompt>
						<tooltip><![CDATA[USERNAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<query>
				<sql><![CDATA[select 
'SQLDEV:LINK:'
     ||owner
     ||':'
     ||object_type
     ||':'
     ||object_name
     ||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' details,
     o.* 
from dba_OBJECTS o
where owner=:USERNAME
order by owner, object_name, object_id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[UserSegments]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select 'SQLDEV:LINK:'
     ||owner
     ||':'
     ||segment_type
     ||':'
     ||segment_name
     ||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' details,
     s.* 
from CDB_SEGMENTS s
where (con_id=:CON_ID or :CON_ID is null) and owner=:USERNAME
order by owner, SEGMENT_name--, object_id]]></sql>
				<binds>
					<bind id="CON_ID">
						<prompt><![CDATA[CON_ID]]></prompt>
						<tooltip><![CDATA[CON_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="USERNAME">
						<prompt><![CDATA[USERNAME]]></prompt>
						<tooltip><![CDATA[USERNAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<query>
				<sql><![CDATA[select 'SQLDEV:LINK:'
     ||owner
     ||':'
     ||segment_type
     ||':'
     ||segment_name
     ||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' details,
     s.* 
from dba_SEGMENTS s
where owner=:USERNAME
order by owner, SEGMENT_name--, object_id]]></sql>
			</query>
		</display>
	</display>
	<folder>
		<name><![CDATA[Statspack]]></name>
		<tooltip><![CDATA[Statspack]]></tooltip>
		<description><![CDATA[ ]]></description>
			<display id="76f2db8c-018f-1000-8012-ac1900c08aaa" type="" style="Chart" enable="true">
			<name><![CDATA[System Statistics from Statspac]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_LOGARITHMIC_SCALE><![CDATA[true]]></Y1AXIS_LOGARITHMIC_SCALE>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<DATA_MAP_COLUMNS><![CDATA[\,"TIME"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"PER_SEC","STAT_NAME","TIME"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"STAT_NAME"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"PER_SEC"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[-- Get System Statistics from Statspack
WITH snaps AS(
     SELECT sn.snap_id
          , sn.snap_time
          , ROUND((sn.snap_time - LAG( sn.snap_time, 1 ) OVER( PARTITION BY sn.instance_number ORDER BY sn.snap_id )) *24*3600, 2 ) AS time_diff
          , sn.instance_number
          , sn.dbid
       FROM stats$snapshot sn
      WHERE sn.instance_number = ( SELECT instance_number FROM v$instance )
)
SELECT TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) time
     , stat_name
     , ROUND( value_diff / time_diff, 2 )AS per_sec
--     , snap_id
  FROM
     (
     SELECT sn.snap_id
          , ss.value
          , ( ss.value - LAG( ss.value, 1 ) OVER( PARTITION BY ss.name ORDER BY ss.snap_id )) AS value_diff
          , sn.time_diff
          , sn.snap_time
          , ss.name stat_name
       FROM stats$sysstat ss
          , snaps sn
      WHERE ss.name IN( 'user commits', 'user rollbacks', 'user calls', 'recursive calls', 'user logons cumulative', 'execute count', 'parse count (total)'
      )
        AND sn.snap_id = ss.snap_id
        and sn.snap_time between sysdate - :days_start and sysdate - :days_end
        AND ss.dbid = sn.dbid
        AND ss.instance_number = sn.instance_number
     )
ORDER BY snap_time, stat_name]]></sql>
				<binds>
					<bind id="days_start">
						<prompt><![CDATA[days_start]]></prompt>
						<tooltip><![CDATA[days_start]]></tooltip>
						<value><![CDATA[1]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="days_end">
						<prompt><![CDATA[days_end]]></prompt>
						<tooltip><![CDATA[days_end]]></tooltip>
						<value><![CDATA[0]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[IO]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_LOGARITHMIC_SCALE><![CDATA[true]]></Y1AXIS_LOGARITHMIC_SCALE>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<DATA_MAP_COLUMNS><![CDATA[\,"TIME"]]></DATA_MAP_COLUMNS>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<DATA_MAP_COLNAMES><![CDATA[\,"PER_SEC","STAT_NAME","TIME"]]></DATA_MAP_COLNAMES>
					<DATA_MAP_SERIES><![CDATA[\,"STAT_NAME"]]></DATA_MAP_SERIES>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<STYLE><![CDATA[Default]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<DATA_MAP_VALUES><![CDATA[\,"PER_SEC"]]></DATA_MAP_VALUES>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[-- Get System Statistics from Statspack
WITH snaps AS(
     SELECT sn.snap_id
          , sn.snap_time
          , ROUND((sn.snap_time - LAG( sn.snap_time, 1 ) OVER( PARTITION BY sn.instance_number ORDER BY sn.snap_id )) *24*3600, 2 ) AS time_diff
          , sn.instance_number
          , sn.dbid
       FROM stats$snapshot sn
      WHERE sn.instance_number = ( SELECT instance_number FROM v$instance )
)
SELECT TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) time
     , stat_name
     , ROUND( value_diff / time_diff, 2 )AS per_sec
  FROM
     (
     SELECT sn.snap_id
          , ss.value
          , ( ss.value - LAG( ss.value, 1 ) OVER( PARTITION BY ss.name ORDER BY ss.snap_id )) AS value_diff
          , sn.time_diff
          , sn.snap_time
          , ss.name stat_name
       FROM stats$sysstat ss
          , snaps sn
      WHERE ss.name IN( 'physical reads', 'physical reads cache', 'physical writes', 'physical read IO requests', 'physical write IO requests' )
        AND sn.snap_id = ss.snap_id
        and sn.snap_time between sysdate - :days_start and sysdate - :days_end
        AND ss.dbid = sn.dbid
        AND ss.instance_number = sn.instance_number
     )
ORDER BY snap_time, stat_name]]></sql>
					<binds>
						<bind id="days_start">
							<prompt><![CDATA[days_start]]></prompt>
							<tooltip><![CDATA[days_start]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="days_end">
							<prompt><![CDATA[days_end]]></prompt>
							<tooltip><![CDATA[days_end]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[Gets]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_LOGARITHMIC_SCALE><![CDATA[true]]></Y1AXIS_LOGARITHMIC_SCALE>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<STYLE><![CDATA[Default]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[WITH snaps AS(
     SELECT sn.snap_id
          , sn.snap_time
          , LAG( sn.snap_id, 1 ) OVER( ORDER BY sn.snap_id ) AS prev_snap_id
          , ( LAG( sn.snap_time, 1 ) OVER( ORDER BY sn.snap_id ) - sn.snap_time ) *24*3600 AS time_diff
          , sn.instance_number
          , sn.dbid
       FROM stats$snapshot sn
)
SELECT TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) time
     , stat_name
     , value_diff  * blksz / 1024 / 1024
       / DECODE( time_diff, 0, NULL, time_diff ) "MB/s"
  FROM
     (
     SELECT sn.snap_id
          , ( LAG( ss.value, 3 ) OVER( ORDER BY ss.snap_id, ss.name ) - ss.value ) AS value_diff
          , sn.time_diff
          , sn.snap_time
          , ss.name stat_name
          , ( select to_number(value) from v$parameter where name='db_block_size' ) blksz
       FROM stats$sysstat ss
          , snaps sn
      WHERE ss.name IN ('db block changes', 'db block gets', 'consistent gets')
        AND sn.snap_id = ss.snap_id
        and sn.snap_time between sysdate - :days_start and sysdate - :days_end
        AND ss.dbid = sn.dbid
        AND ss.instance_number = sn.instance_number
        AND sn.instance_number = ( SELECT instance_number FROM v$instance )
     )
ORDER BY snap_time, stat_name DESC]]></sql>
					<binds>
						<bind id="days_start">
							<prompt><![CDATA[days_start]]></prompt>
							<tooltip><![CDATA[days_start]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="days_end">
							<prompt><![CDATA[days_end]]></prompt>
							<tooltip><![CDATA[days_end]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[Active Sessions]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_LOGARITHMIC_SCALE><![CDATA[false]]></Y1AXIS_LOGARITHMIC_SCALE>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<STYLE><![CDATA[Default]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[-- Get Logical CPUs and OS CPU Load
SELECT TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) time
     , CASE nm.stat_name
       WHEN 'NUM_CPUS' THEN 'Log. CPUs'
       WHEN 'LOAD' THEN 'OS Load'
       ELSE nm.stat_name
       END AS stat_name
     , os.value
     , sn.snap_time
  FROM stats$osstat os
     , stats$osstatname nm
     , stats$snapshot sn
 WHERE os.osstat_id = nm.osstat_id
   AND nm.stat_name IN( 'NUM_CPUS', 'LOAD' )
   AND sn.snap_id = os.snap_id
   and sn.snap_time between sysdate - :days_start and sysdate - :days_end
   AND sn.instance_number = ( SELECT instance_number FROM v$instance )
   AND os.instance_number = sn.instance_number
UNION ALL
-- Get AAS (= DB Time / Wall Clock Time)
-- Wait times are measured in microseconds
SELECT time
     , 'AAS' AS stat_name
     , value_diff / DECODE( time_diff, 0, NULL, time_diff ) / 24 / 3600 / 1000000 AS aas
     , snap_time
FROM
(
  SELECT TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' )  time
       , ( LEAD( tm.value, 1 ) OVER( ORDER BY tm.snap_id ) - tm.value ) AS value_diff
       , ( LEAD( sn.snap_time, 1 ) OVER( ORDER BY sn.snap_id ) - sn.snap_time ) AS time_diff
       , sn.snap_time
    FROM stats$sys_time_model tm
       , stats$time_model_statname nm
       , stats$snapshot sn
   WHERE tm.stat_id = nm.stat_id
     and sn.snap_time between sysdate - :days_start and sysdate - :days_end
     AND nm.stat_name = 'DB time'
     AND sn.snap_id = tm.snap_id
     AND sn.instance_number = ( SELECT instance_number FROM v$instance )
     AND tm.instance_number = sn.instance_number
)
 ORDER BY snap_time, stat_name]]></sql>
					<binds>
						<bind id="days_start">
							<prompt><![CDATA[days_start]]></prompt>
							<tooltip><![CDATA[days_start]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="days_end">
							<prompt><![CDATA[days_end]]></prompt>
							<tooltip><![CDATA[days_end]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[Time Model]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT snap_time ||' - '|| SUBSTR( nextt, -5 ) AS interval
     , stat_name
     , ROUND( dv / DECODE( dt, 0, NULL, dt ) / 24 / 3600 / 1000000, 2 ) aas
FROM (
SELECT tm.snap_id, sn.snap_time, nm.stat_name
     , tm.VALUE
     , LEAD( tm.value, 1 ) OVER( PARTITION BY tm.stat_id ORDER BY tm.snap_id ) nextv
     , LEAD( tm.value, 1 ) OVER( PARTITION BY tm.stat_id ORDER BY tm.snap_id )- tm.value dv
     , LEAD( sn.snap_time, 1 ) OVER( PARTITION BY tm.stat_id ORDER BY tm.snap_id ) nextt
     , LEAD( sn.snap_time, 1 ) OVER( PARTITION BY tm.stat_id ORDER BY tm.snap_id ) - sn.snap_time AS dt
  FROM STATS$TIME_MODEL_STATNAME nm
     , STATS$SYS_TIME_MODEL tm
     , STATS$SNAPSHOT sn
 WHERE tm.STAT_ID = nm.STAT_ID
   AND tm.SNAP_ID = sn.SNAP_ID
   AND sn.instance_number = ( SELECT instance_number FROM v$instance )
   AND TO_CHAR( sn.snap_time, 'YYYY-MM-DD hh24:mi' ) >= :TIME
)
 WHERE TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME
   AND ROUND( dv / DECODE( dt, 0, NULL, dt ) / 24 / 3600 / 1000000, 2 ) > 0
 ORDER BY aas DESC, stat_name]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[Top Events]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT * FROM(
  SELECT TO_CHAR(snap_time, 'YYYY-MM-DD hh24:mi')
         ||' - '|| TO_CHAR( LEAD( snap_time, 1 ) OVER( PARTITION BY event ORDER BY snap_id ), 'hh24:mi' ) AS interval
       , event
       , ROUND(( LEAD( time_spent, 1 ) OVER( PARTITION BY event ORDER BY snap_id ) - time_spent ) /
         ( LEAD( snap_time, 1 ) OVER( PARTITION BY event ORDER BY snap_id ) - snap_time ) / 24 ) seconds_waited
    FROM(
    SELECT    snap_id,
              snap_time,
              event,
              time_waited_micro / 1000000 AS time_spent
       FROM   stats$snapshot NATURAL JOIN stats$system_event NATURAL JOIN v$event_name
      WHERE   TRUNC( snap_time, 'mi' ) BETWEEN TO_DATE( :TIME, 'YYYY-MM-DD hh24:mi' )
              AND ( SELECT MIN( snap_time ) FROM stats$snapshot WHERE TRUNC( snap_time, 'mi' ) > TO_DATE( :TIME, 'YYYY-MM-DD hh24:mi' ) )
        AND   wait_class# != 6
        AND   instance_number = ( SELECT instance_number FROM v$instance )
    
              UNION ALL
    
     SELECT   snap_id,
              snap_time,
              'CPU used by this session' AS event,
              value / 100 as time_spent
       FROM   stats$sysstat NATURAL JOIN stats$snapshot
      WHERE   TRUNC( snap_time, 'mi' ) BETWEEN TO_DATE( :TIME, 'YYYY-MM-DD hh24:mi' )
              AND ( SELECT MIN( snap_time ) FROM stats$snapshot WHERE TRUNC( snap_time, 'mi' ) > TO_DATE( :TIME, 'YYYY-MM-DD hh24:mi' ) )
        AND   name = 'CPU used by this session'
        AND   instance_number = ( SELECT instance_number FROM v$instance )
  )
  ORDER BY seconds_waited DESC NULLS LAST
)
--WHERE ROWNUM < 6]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$SHARED_POOL_ADVICE]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select spa.* 
from stats$snapshot sn join STATS$SHARED_POOL_ADVICE spa on (sn.snap_id=spa.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$WAITSTAT]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select stat.* 
from stats$snapshot sn join STATS$WAITSTAT stat on (sn.snap_id=stat.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME
order by stat.time desc]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[STATS$SGA]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_LOGARITHMIC_SCALE><![CDATA[true]]></Y1AXIS_LOGARITHMIC_SCALE>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<DATA_MAP_COLUMNS><![CDATA[\,,]]></DATA_MAP_COLUMNS>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<DATA_MAP_COUNT><![CDATA[2]]></DATA_MAP_COUNT>
					<STYLE><![CDATA[Default]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) time 
     , name
     , value
  FROM
   stats$snapshot sn join STATS$SGA stat on (sn.snap_id=stat.snap_id)
where sn.snap_time between sysdate - :days_start and sysdate - :days_end
ORDER BY time, name DESC]]></sql>
					<binds>
						<bind id="days_start">
							<prompt><![CDATA[days_start]]></prompt>
							<tooltip><![CDATA[days_start]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="days_end">
							<prompt><![CDATA[days_end]]></prompt>
							<tooltip><![CDATA[days_end]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$DB_CACHE_ADVICE]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select :TIME, stat.* 
from stats$snapshot sn join STATS$DB_CACHE_ADVICE stat on (sn.snap_id=stat.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$FILESTATXS]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select :TIME, stat.* 
from stats$snapshot sn join STATS$FILESTATXS stat on (sn.snap_id=stat.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$PARAMETER]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select :TIME, stat.* 
from stats$snapshot sn join STATS$PARAMETER stat on (sn.snap_id=stat.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME
order by name]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$PGA_TARGET_ADVICE]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select :TIME, stat.* 
from stats$snapshot sn join STATS$PGA_TARGET_ADVICE stat on (sn.snap_id=stat.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STATS$SQL_WORKAREA_HISTOGRAM]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select :TIME, stat.* 
from stats$snapshot sn join STATS$SQL_WORKAREA_HISTOGRAM stat on (sn.snap_id=stat.snap_id)
where TO_CHAR( snap_time, 'YYYY-MM-DD hh24:mi' ) = :TIME]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
		</display>
	</folder>
	<folder>
		<name><![CDATA[AWR]]></name>
		<tooltip><![CDATA[AWR]]></tooltip>
		<description><![CDATA[ ]]></description>
			<display id="774cae48-018f-1000-8021-ac1900c08aaa" type="" style="plsql-dbms_output" enable="true">
			<name><![CDATA[Report]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[begin
DBMS_OUTPUT.ENABLE (
   buffer_size => 1000000);
for i in (
select
output 
FROM TABLE(dbms_workload_repository.awr_report_html ((select dbid from v$database ),
                                                      1,
                                                      (select distinct snap_id from dba_hist_snapshot where trunc(end_interval_time,'hh') = trunc (sysdate -2,'hh')),
                                                      (select distinct snap_id from dba_hist_snapshot where trunc(end_interval_time,'hh') = trunc (sysdate -1,'hh') ))))
loop
dbms_output.put_line(i.output);
end loop;
end;]]></sql>
			</query>
		</display>
		<display id="7c2316b3-018f-1000-800d-ac19069fe140" type="" style="Chart" enable="true">
			<name><![CDATA[Undo per hour]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_LOGARITHMIC_SCALE><![CDATA[false]]></Y1AXIS_LOGARITHMIC_SCALE>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[BOTTOM]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<DATA_MAP_COLUMNS><![CDATA[\,"TIME"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"INSTANCE_NUMBER","TIME","USED_GB"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"INSTANCE_NUMBER"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"USED_GB"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select to_char(begin_time,'yyyy-mm-dd hh24') time , instance_number,
round(max(UNDOBLKS+ EXPIREDBLKS+UNEXPIREDBLKS+ACTIVEBLKS)*8192/(1024*1024*1024),2) USED_GB
from dba_hist_undostat
where begin_time between sysdate - nvl(:begin_days,15) and sysdate - nvl(:end_days,0)
group by to_char(begin_time,'yyyy-mm-dd hh24'), instance_number
order by to_char(begin_time,'yyyy-mm-dd hh24'), instance_number]]></sql>
				<binds>
					<bind id="begin_days">
						<prompt><![CDATA[begin_days]]></prompt>
						<tooltip><![CDATA[begin_days]]></tooltip>
						<value><![CDATA[7]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="end_days">
						<prompt><![CDATA[end_days]]></prompt>
						<tooltip><![CDATA[end_days]]></tooltip>
						<value><![CDATA[0]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[UNDOSTAT]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select round((UNDOBLKS+ EXPIREDBLKS+UNEXPIREDBLKS+ACTIVEBLKS)*8192/(1024*1024*1024),2) USED_GB, u.* 
from DBA_HIST_UNDOSTAT u
where to_char(begin_time,'yyyy-mm-dd hh24') = :TIME]]></sql>
					<binds>
						<bind id="TIME">
							<prompt><![CDATA[TIME]]></prompt>
							<tooltip><![CDATA[TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Chart" enable="true">
				<name><![CDATA[Undostat/instance/block_type]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
					<Y1AXIS_SCALE_INCREMENT><![CDATA[30.0]]></Y1AXIS_SCALE_INCREMENT>
					<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
					<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
					<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
					<LEGEND_LOCATION><![CDATA[BOTTOM]]></LEGEND_LOCATION>
					<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
					<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
					<DATA_MAP_COLUMNS><![CDATA[\,"TIME","TIME","TIME","TIME"]]></DATA_MAP_COLUMNS>
					<Y1AXIS_SCALE_MAXIMUM><![CDATA[210.0]]></Y1AXIS_SCALE_MAXIMUM>
					<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
					<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
					<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
					<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
					<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
					<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
					<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
					<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
					<DATA_MAP_COLNAMES><![CDATA[\,"ACTIVEBLKS","ACTIVEBLKS_AGG","EXPIREDBLKS","EXPIREDBLKS_AGG","ROUND((UNDOBLKS+EXPIREDBLKS+UNEXPIREDBLKS+ACTIVEBLKS)*8192/(1024*1024*1024)\2)","SUMA","TIME","UNDOBLKS","UNDOBLKS_AGG","UNEXPIREDBLKS","UNEXPIREDBLKS_AGG"]]></DATA_MAP_COLNAMES>
					<DATA_MAP_SERIES><![CDATA[\,"ACTIVEBLKS","EXPIREDBLKS","UNDOBLKS","UNEXPIREDBLKS"]]></DATA_MAP_SERIES>
					<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
					<DATA_MAP_COUNT><![CDATA[4]]></DATA_MAP_COUNT>
					<STYLE><![CDATA[Default]]></STYLE>
					<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
					<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
					<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
					<DATA_MAP_VALUES><![CDATA[\,"ACTIVEBLKS_AGG","EXPIREDBLKS_AGG","UNDOBLKS_AGG","UNEXPIREDBLKS_AGG"]]></DATA_MAP_VALUES>
					<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
					<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
					<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
					<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
					<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				</CustomValues>
				<query>
					<sql><![CDATA[select to_char(begin_time,'yyyy-mm-dd hh24') time,
round(UNDOBLKS*8192/(1024*1024*1024),2) UNDOBLKS_agg,
round(EXPIREDBLKS*8192/(1024*1024*1024),2) EXPIREDBLKS_agg, 
round(UNEXPIREDBLKS*8192/(1024*1024*1024),2) UNEXPIREDBLKS_agg, 
round(ACTIVEBLKS*8192/(1024*1024*1024),2) ACTIVEBLKS_agg ,
'UNDOBLKS' as UNDOBLKS,
'EXPIREDBLKS' as EXPIREDBLKS,
'UNEXPIREDBLKS' as UNEXPIREDBLKS,
'ACTIVEBLKS' as ACTIVEBLKS
from dba_hist_undostat
where begin_time between sysdate - nvl(:begin_days,15) and sysdate - nvl(:end_days,0)
and instance_number = :INSTANCE_NUMBER
and (to_char(begin_time,'yyyy-mm-dd hh24'),round((UNDOBLKS+ EXPIREDBLKS+UNEXPIREDBLKS+ACTIVEBLKS)*8192/(1024*1024*1024),2)) in 
  (select to_char(begin_time,'yyyy-mm-dd hh24') time ,round(max(UNDOBLKS+ EXPIREDBLKS+UNEXPIREDBLKS+ACTIVEBLKS)*8192/(1024*1024*1024),2)
from dba_hist_undostat
where begin_time between sysdate - nvl(:begin_days,15) and sysdate - nvl(:end_days,0) and instance_number = :INSTANCE_NUMBER
group by to_char(begin_time,'yyyy-mm-dd hh24'))
order by to_char(begin_time,'yyyy-mm-dd hh24')]]></sql>
					<binds>
						<bind id="begin_days">
							<prompt><![CDATA[begin_days]]></prompt>
							<tooltip><![CDATA[begin_days]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="end_days">
							<prompt><![CDATA[end_days]]></prompt>
							<tooltip><![CDATA[end_days]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="INSTANCE_NUMBER">
							<prompt><![CDATA[INSTANCE_NUMBER]]></prompt>
							<tooltip><![CDATA[INSTANCE_NUMBER]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
		</display>
		<display id="52246a64-018f-1000-8001-ac1906f87f05" type="" style="Chart" enable="true">
			<name><![CDATA[AWR - session history]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<DATA_MAP_COLUMNS><![CDATA[\,"SNAP_END_DATE"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"COUNT(*)","SNAP_END_DATE","USERNAME"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"USERNAME"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"COUNT(*)"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT "SNAP_END_DATE", "USERNAME", "COUNT(*)", snap_id FROM(
select snap_id, 
to_char(end_interval_time,'yyyy-mm-dd hh24:mi') snap_end_date,  
--s.instance_number, 
u.username, count(*)
from (select distinct  s.snap_id,  s.instance_number, user_id, session_id, session_serial#, end_interval_time
      from  dba_hist_active_sess_history a1 join dba_hist_snapshot s on a1.snap_id=s.snap_id and a1.instance_number=s.instance_number
      where end_interval_time between sysdate- nvl(:start_days,5) and sysdate- nvl(:end_days,0)) a join dba_users u on a.user_id=u.user_id
where u.username in       
 ('MMSQL','BI_ADF_READER')          
--('BI_ADF_READER')                        
group by snap_id, 
to_char(end_interval_time,'yyyy-mm-dd hh24:mi'),  
--s.instance_number, 
u.username
order by 
--s.snap_id desc, 
to_char(end_interval_time,'yyyy-mm-dd hh24:mi'),  
--s.instance_number, 
u.username
)]]></sql>
				<binds>
					<bind id="start_days">
						<prompt><![CDATA[start_days]]></prompt>
						<tooltip><![CDATA[start_days]]></tooltip>
						<value><![CDATA[120]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="end_days">
						<prompt><![CDATA[end_days]]></prompt>
						<tooltip><![CDATA[end_days]]></tooltip>
						<value><![CDATA[0]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[session_list]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select a.*, SQL_TEXT
from 
(
select u.username, machine, session_id, session_serial#, min(sample_time) start_session, max(sample_time) end_session, max(sample_time)-min(sample_time) duration, count(*) number_of_samples , a.sql_id
from dba_hist_active_sess_history a join dba_users u on a.user_id=u.user_id
where 
to_char(sample_time,'yyyy-mm-dd hh24:mi') = :SNAP_END_DATE
--snap_id=:SNAP_ID
--snap_id between  108242 and 108244
--snap_id between  108218 and 108220
--snap_id between  108314 and 108316
--trunc(sample_time, 'hh') between to_date('2024-05-14 6','YYYY-MM-DD hh24') and to_date('2024-05-14 8','YYYY-MM-DD hh24')
--and user_id=298
group by u.username,machine, session_id, session_serial#, a.sql_id) a
left join DBA_HIST_SQLTEXT s on a.sql_id=s.sql_id
order by machine, start_session, session_id, session_serial#]]></sql>
					<binds>
						<bind id="SNAP_END_DATE">
							<prompt><![CDATA[SNAP_END_DATE]]></prompt>
							<tooltip><![CDATA[SNAP_END_DATE]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
		</display>
	</folder>
	<display id="76f252a5-018f-1000-8011-ac1900c08aaa" type="" style="Chart" enable="true">
		<name><![CDATA[Undo - current usage]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
			<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
			<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
			<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
			<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
			<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
			<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
			<PLOT_DATALABELS_SLICE_POSITION><![CDATA[OUTSIDE_SLICE_LINE]]></PLOT_DATALABELS_SLICE_POSITION>
			<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
			<DATA_MAP_COLUMNS><![CDATA[\,"TABLESPACE_NAME"]]></DATA_MAP_COLUMNS>
			<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
			<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
			<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
			<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
			<TYPE><![CDATA[BAR_VERT_STACK]]></TYPE>
			<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
			<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
			<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
			<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
			<DATA_MAP_COLNAMES><![CDATA[\,"NU8MBER_OF_EXTENTS","SIZE_MB","STATUS","TABLESPACE_NAME"]]></DATA_MAP_COLNAMES>
			<DATA_MAP_SERIES><![CDATA[\,"STATUS"]]></DATA_MAP_SERIES>
			<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
			<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
			<STYLE><![CDATA[Default]]></STYLE>
			<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
			<XAXIS_SCALE_INCREMENT><![CDATA[20.0]]></XAXIS_SCALE_INCREMENT>
			<PLOT_DATALABELS_SLICE_TYPE><![CDATA[PERCENT_VALUE]]></PLOT_DATALABELS_SLICE_TYPE>
			<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
			<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
			<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
			<DATA_MAP_VALUES><![CDATA[\,"SIZE_MB"]]></DATA_MAP_VALUES>
			<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
			<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
			<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
			<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
			<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
		</CustomValues>
		<query>
			<sql><![CDATA[select tablespace_name, status, round(sum(bytes)/1024/1024/1024) size_MB, count(*) number_of_extents
from dba_undo_extents 
group by tablespace_name, status
union all
select tablespace_name, 'FREE',  round(sum(bytes)/1024/1024/1024) size_MB, count(*)
from dba_free_space where tablespace_name like 'UNDO%'
group by tablespace_name
order by tablespace_name, status]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[undo to user]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select  s.inst_id,s.sid,s.serial#,username,s.machine,
t.used_ublk ,t.used_urec,(rs.rssize)/1024/1024 MB,rn.name
from    gv$transaction t,gv$session s,v$rollstat rs, v$rollname rn
where   t.addr=s.taddr and rs.usn=rn.usn and rs.usn=t.xidusn and rs.xacts>0]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[raw_data_for report]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select tablespace_name, status, round(sum(bytes)/1024/1024/1024) size_MB, count(*) number_of_extents
from dba_undo_extents 
group by tablespace_name, status
union all
select tablespace_name, 'FREE',  round(sum(bytes)/1024/1024/1024) size_MB, count(*)
from dba_free_space where tablespace_name like 'UNDO%'
group by tablespace_name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Undo Usage By Object]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select substr(a.os_user_name,1,15)    "OS_User"
, substr(a.oracle_username,1,8) "DB_User"
, substr(b.owner,1,8)  "Schema"
, substr(b.object_name,1,30)    "Object_Name"
, substr(b.object_type,1,10)    "Type"
, substr(c.segment_name,1,15)  "RBS"
,TABLESPACE_NAME
, substr(d.used_urec,1,12)      "Records" ,
e.sid,e.serial#
from gv$locked_object      a
, dba_objects b
, dba_rollback_segs  c
, gv$transaction      d
, gv$session e
where   a.object_id =  b.object_id
and a.xidusn    =  c.segment_id
and a.xidusn    =  d.xidusn
and a.xidslot   =  d.xidslot
and d.addr      =  e.taddr]]></sql>
			</query>
		</display>
	</display>
	<folder>
		<name><![CDATA[ASH]]></name>
		<tooltip><![CDATA[ASH]]></tooltip>
		<description><![CDATA[ ]]></description>
			<display id="772e91f0-018f-1000-8017-ac1900c08aaa" type="" style="Table" enable="true">
			<name><![CDATA[Sessio/Query history]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select a.*, SQL_TEXT
from 
(
select machine, session_id, session_serial#, min(sample_time) start_session, max(sample_time) end_session, max(sample_time)-min(sample_time) duration, count(*) number_of_samples , a.sql_id
from dba_hist_active_sess_history a 
where 
trunc(sample_time, 'hh') between  nvl(trunc(sysdate-:START_HOUR/24,'hh'),trunc (sysdate-1,'hh' ))
                              and nvl(trunc(sysdate-:END_HOUR/24  ,'hh'),trunc (sysdate,'hh' ))
and user_id=298
group by machine, session_id, session_serial#, a.sql_id) a
left join DBA_HIST_SQLTEXT s on a.sql_id=s.sql_id
order by machine, start_session, session_id, session_serial#]]></sql>
				<binds>
					<bind id="START_HOUR">
						<prompt><![CDATA[START_HOUR]]></prompt>
						<tooltip><![CDATA[Hours ago - start interval]]></tooltip>
						<value><![CDATA[24]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="END_HOUR">
						<prompt><![CDATA[END_HOUR]]></prompt>
						<tooltip><![CDATA[Hours ago - end interval]]></tooltip>
						<value><![CDATA[0]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="afbfe959-0193-1000-8001-c0a8a168f6fb" type="" style="Chart" enable="true">
			<name><![CDATA[queries vs parallel sessions]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<DATA_MAP_COLUMNS><![CDATA[\,"SAMPLE_TIME","SAMPLE_TIME","SAMPLE_TIME"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"NUMBER_OF_QUERIES","NUMBER_OF_SESSIONS","PARALLEL_DEGREE","SAMPLE_TIME"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,queries,sessions,parallel_degree]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[3]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"NUMBER_OF_QUERIES","NUMBER_OF_SESSIONS","PARALLEL_DEGREE"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select sample_time, count(distinct ah.sql_id) as number_of_queries, count(*) as number_of_sessions, count(*)/count(distinct ah.sql_id) as parallel_degree
from DBA_HIST_ACTIVE_SESS_HISTORY ah  
where 1=1
and ah.sql_id like nvl(:sql_id , '%')
and sample_time between to_timestamp(:start_timestamp, 'YYYY-MM-DD HH24:mi') and to_timestamp(:end_timestamp, 'YYYY-MM-DD HH24:mi')
group by sample_time
order by ah.sample_time]]></sql>
				<binds>
					<bind id="sql_id">
						<prompt><![CDATA[sql_id]]></prompt>
						<tooltip><![CDATA[sql_id]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="start_timestamp">
						<prompt><![CDATA[start_timestamp]]></prompt>
						<tooltip><![CDATA[start_timestamp]]></tooltip>
						<value><![CDATA[2024-12-09 02:00]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="end_timestamp">
						<prompt><![CDATA[end_timestamp]]></prompt>
						<tooltip><![CDATA[end_timestamp]]></tooltip>
						<value><![CDATA[2024-12-09 05:00]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[queries]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select sample_time,ah.sql_id, count(*) number_of_sessions, dbms_lob.substr(sql_text,100)
from DBA_HIST_ACTIVE_SESS_HISTORY ah  left join dba_hist_sqltext st on ah.sql_id=st.sql_id
where 1=1
and ah.sql_id like nvl(:sql_id , '%')
and sample_time =:SAMPLE_TIME
group by sample_time,ah.sql_id,  dbms_lob.substr(sql_text,100)
order by sample_time,number_of_sessions desc, ah.sql_id]]></sql>
					<binds>
						<bind id="sql_id">
							<prompt><![CDATA[sql_id]]></prompt>
							<tooltip><![CDATA[sql_id]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="SAMPLE_TIME">
							<prompt><![CDATA[SAMPLE_TIME]]></prompt>
							<tooltip><![CDATA[SAMPLE_TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[events]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT NVL(a.event, 'ON CPU') AS event,
       COUNT(*)*10 AS total_wait_time
FROM   dba_hist_active_sess_history a
WHERE  a.sample_time = :SAMPLE_TIME 
and a.sql_id like nvl(:sql_id , '%')
GROUP BY a.event
ORDER BY total_wait_time DESC]]></sql>
					<binds>
						<bind id="SAMPLE_TIME">
							<prompt><![CDATA[SAMPLE_TIME]]></prompt>
							<tooltip><![CDATA[SAMPLE_TIME]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="sql_id">
							<prompt><![CDATA[sql_id]]></prompt>
							<tooltip><![CDATA[sql_id]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[events_whole_period]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT :start_timestamp start_timestamp, :end_timestamp end_timestamp, NVL(a.event, 'ON CPU') AS event,
       COUNT(*)*10 AS total_wait_time
FROM   dba_hist_active_sess_history a
WHERE  sample_time between to_timestamp(:start_timestamp, 'YYYY-MM-DD HH24:mi') and to_timestamp(:end_timestamp, 'YYYY-MM-DD HH24:mi')
and a.sql_id like nvl(:sql_id , '%')
GROUP BY a.event
ORDER BY total_wait_time DESC]]></sql>
					<binds>
						<bind id="start_timestamp">
							<prompt><![CDATA[start_timestamp]]></prompt>
							<tooltip><![CDATA[start_timestamp]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="end_timestamp">
							<prompt><![CDATA[end_timestamp]]></prompt>
							<tooltip><![CDATA[end_timestamp]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="sql_id">
							<prompt><![CDATA[sql_id]]></prompt>
							<tooltip><![CDATA[sql_id]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
		</display>
	</folder>
	<display id="7b86f41a-018f-1000-803a-ac1900c08aaa" type="" style="Chart" enable="true">
		<name><![CDATA[Wait Class History - minutes]]></name>
		<description><![CDATA[Average Active Sessions by Wait Class (1h)]]></description>
		<tooltip><![CDATA[Average Active Sessions by Wait Class (About 1h History)]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<Y1AXIS_TITLE_TEXT><![CDATA[Average Active Sessions]]></Y1AXIS_TITLE_TEXT>
			<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
			<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
			<PLOT_SERIES_OPTIONS_COLOR><![CDATA[\,-6710887,-3394816,-10066279,-16751002,-26368]]></PLOT_SERIES_OPTIONS_COLOR>
			<Y1AXIS_REFOBJ_COUNT><![CDATA[0]]></Y1AXIS_REFOBJ_COUNT>
			<Y1AXIS_REFOBJ_LINE_VALUE><![CDATA[\]]></Y1AXIS_REFOBJ_LINE_VALUE>
			<TITLE_FONT.POSTURE><![CDATA[false]]></TITLE_FONT.POSTURE>
			<Y1AXIS_NUMBER_FORMATS.TYPE><![CDATA[NUMBER]]></Y1AXIS_NUMBER_FORMATS.TYPE>
			<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
			<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
			<TYPE><![CDATA[BAR_VERT_STACK]]></TYPE>
			<STYLE><![CDATA[Default]]></STYLE>
			<TITLE_ALIGNMENT><![CDATA[CENTER]]></TITLE_ALIGNMENT>
			<TITLE_TEXT><![CDATA[Average Active Sessions by Wait Class]]></TITLE_TEXT>
			<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
			<Y1AXIS_NUMBER_FORMATS.NEGATIVE_NUMBER_FORMAT><![CDATA[BRACKETED]]></Y1AXIS_NUMBER_FORMATS.NEGATIVE_NUMBER_FORMAT>
			<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
			<TITLE_FONT.UNDERLINE><![CDATA[false]]></TITLE_FONT.UNDERLINE>
			<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
			<TITLE_FONT.NAME><![CDATA[SansSerif]]></TITLE_FONT.NAME>
			<PLOT_HGRID_WIDTH><![CDATA[THINNEST]]></PLOT_HGRID_WIDTH>
			<TITLE_FONT.COLOR><![CDATA[-12565927]]></TITLE_FONT.COLOR>
			<TITLE_FONT.SIZE><![CDATA[14]]></TITLE_FONT.SIZE>
			<PLOT_DATATIPS_CUMULATIVE_VALUE><![CDATA[true]]></PLOT_DATATIPS_CUMULATIVE_VALUE>
			<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
			<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
			<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
			<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
			<GRADIENT><![CDATA[false]]></GRADIENT>
			<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
			<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
			<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
			<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
			<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
			<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
			<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
			<Y1AXIS_NUMBER_FORMATS.SCALE_FACTOR><![CDATA[NONE]]></Y1AXIS_NUMBER_FORMATS.SCALE_FACTOR>
			<Y1AXIS_REFOBJ_VISIBLE><![CDATA[\]]></Y1AXIS_REFOBJ_VISIBLE>
			<Y1AXIS_NUMBER_FORMATS.CURRENCY_SYMBOL><![CDATA[EUR_SYMBOL]]></Y1AXIS_NUMBER_FORMATS.CURRENCY_SYMBOL>
			<DATA_MAP_COLNAMES><![CDATA[\,"AVERAGE_WAITER_COUNT","END_TIME","WAIT_CLASS"]]></DATA_MAP_COLNAMES>
			<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
			<TITLE_FONT.WEIGHT><![CDATA[true]]></TITLE_FONT.WEIGHT>
			<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
			<Y1AXIS_NUMBER_FORMATS.DECIMAL_PLACES><![CDATA[1]]></Y1AXIS_NUMBER_FORMATS.DECIMAL_PLACES>
			<Y1AXIS_REFOBJ_TEXT><![CDATA[\]]></Y1AXIS_REFOBJ_TEXT>
			<Y1AXIS_REFOBJ_WIDTH><![CDATA[\]]></Y1AXIS_REFOBJ_WIDTH>
			<TITLE><![CDATA[true]]></TITLE>
			<Y1AXIS_TITLE><![CDATA[true]]></Y1AXIS_TITLE>
			<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
			<PLOT_VGRID_WIDTH><![CDATA[THINNEST]]></PLOT_VGRID_WIDTH>
			<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
			<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			<Y1AXIS_REFOBJ_COLOR><![CDATA[\]]></Y1AXIS_REFOBJ_COLOR>
		</CustomValues>
		<query>
			<sql><![CDATA[select * from (
with WC as(
select distinct e.WAIT_CLASS, e.WAIT_CLASS_ID
  from V$EVENT_NAME e
)
select to_char( END_TIME, 'yyyy-mm-dd hh24:mi' ) time
     , wc.WAIT_CLASS
     , round( AVERAGE_WAITER_COUNT, 2 ) AVERAGE_WAITER_COUNT
  from GV$WAITCLASSMETRIC_HISTORY h
     , WC
 where h.WAIT_CLASS_ID = wc.WAIT_CLASS_ID
   and wc.WAIT_CLASS <> 'Idle'
   and h.INST_ID = ( select INST_ID from V$INSTANCE )
   and END_TIME between sysdate- nvl(:start_hours,30)/(24*60) and sysdate- nvl(:end_hours,0)/(24*60)
union all
select to_char( END_TIME, 'yyyy-mm-dd hh24:mi' ) time
     , '_CPU' as WAIT_CLASS
     , round( sh.VALUE / 100, 2 ) AVERAGE_WAITER_COUNT
  from GV$SYSMETRIC_HISTORY sh
 where sh.METRIC_ID = 2075 -- "CPU Usage Per Sec" in csec/s
   and sh.INST_ID = ( select INST_ID from V$INSTANCE )
   and END_TIME between sysdate- nvl(:start_hours,30)/(24*60) and sysdate- nvl(:end_hours,0)/(24*60)
)
--where rownum < 1000
order by TIME, nlssort(WAIT_CLASS, 'nls_sort=BINARY')]]></sql>
			<binds>
				<bind id="start_hours">
					<prompt><![CDATA[start_hours]]></prompt>
					<tooltip><![CDATA[start_hours]]></tooltip>
					<value><![CDATA[30]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="end_hours">
					<prompt><![CDATA[end_hours]]></prompt>
					<tooltip><![CDATA[end_hours]]></tooltip>
					<value><![CDATA[0]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[GV$WAITCLASSMETRIC_HISTORY]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select wc.wait_class, h.*
  from GV$WAITCLASSMETRIC_HISTORY h
     , (
select distinct e.WAIT_CLASS, e.WAIT_CLASS_ID
  from V$EVENT_NAME e
) WC
 where h.WAIT_CLASS_ID = wc.WAIT_CLASS_ID
   --and wc.WAIT_CLASS <> 'Idle'
   and h.INST_ID = ( select INST_ID from V$INSTANCE )
   and to_char( END_TIME, 'yyyy-mm-dd hh24:mi' ) = :TIME]]></sql>
				<binds>
					<bind id="TIME">
						<prompt><![CDATA[TIME]]></prompt>
						<tooltip><![CDATA[TIME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[GV$SYSMETRIC_HISTORY]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select sh.*
 from GV$SYSMETRIC_HISTORY sh
 where 1=1
   --and sh.METRIC_ID = 2075 -- "CPU Usage Per Sec" in csec/s
   and sh.INST_ID = ( select INST_ID from V$INSTANCE )
   and to_char( END_TIME, 'yyyy-mm-dd hh24:mi' ) = :TIME]]></sql>
				<binds>
					<bind id="TIME">
						<prompt><![CDATA[TIME]]></prompt>
						<tooltip><![CDATA[TIME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<folder>
		<name><![CDATA[CDB_PDB]]></name>
		<tooltip><![CDATA[CDB_PDB]]></tooltip>
		<description><![CDATA[ ]]></description>
			<display id="97b97c3d-0193-1000-8001-c0a8a1a8d6c3" type="" style="Table" enable="true">
			<name><![CDATA[CONTAINERS]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$CONTAINERS
order by 1,2]]></sql>
			</query>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[PDBS]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from dba_pdbs
where (con_id=:CON_ID or :CON_ID is null)]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[PROPERTIES]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from CDB_PROPERTIES
where (con_id=:CON_ID or :CON_ID is null)
ORDER BY property_name, con_id]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[SERVICES]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from CDB_SERVICES
where (con_id=:CON_ID or :CON_ID is null)
ORDER BY service_id, con_id]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[SYSTEM_PARAMETER]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from GV$SYSTEM_PARAMETER 
where (con_id=:CON_ID or :CON_ID is null) and (inst_id=:INST_ID or :INST_ID is null)
order by inst_id, name, con_id]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
						<bind id="INST_ID">
							<prompt><![CDATA[INST_ID]]></prompt>
							<tooltip><![CDATA[INST_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[PDB_HISTORY]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from CDB_PDB_HISTORY 
where (con_id=:CON_ID or :CON_ID is null) 
order by pdb_name,con_id, pdb_id, op_timestamp desc]]></sql>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[CONTAINER_DATA]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from CDB_CONTAINER_DATA
order by username, object_name, con_id]]></sql>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[CDB_PDB_SAVED_STATES]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from CDB_PDB_SAVED_STATES]]></sql>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[USERS]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select * 
from CDB_USERS
where (con_id=:CON_ID or :CON_ID is null)
order by username, con_id]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[OBJECTS]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select 
'SQLDEV:LINK:'
     ||owner
     ||':'
     ||object_type
     ||':'
     ||object_name
     ||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' details,
     o.* 
from CDB_OBJECTS o
where (con_id=:CON_ID or :CON_ID is null)
order by owner, object_name, object_id]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[SEGMENTS]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[select 'SQLDEV:LINK:'
     ||owner
     ||':'
     ||segment_type
     ||':'
     ||segment_name
     ||':oracle.dbtools.raptor.controls.grid.DefaultDrillLink' details,
     s.* 
from CDB_SEGMENTS s
where (con_id=:CON_ID or :CON_ID is null)
order by owner, SEGMENT_name--, object_id]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
			<display id="" type="" style="Table" enable="true">
				<name><![CDATA[STORAGE]]></name>
				<description><![CDATA[]]></description>
				<tooltip><![CDATA[]]></tooltip>
				<drillclass><![CDATA[]]></drillclass>
				<CustomValues>
					<TYPE><![CDATA[horizontal]]></TYPE>
				</CustomValues>
				<query>
					<sql><![CDATA[SELECT
--  to_char(sysdate, 'YYYY-MM-DD_HH24:MI:SS') as metric_time,
  a.con_id,
  a.tablespace_name,
  round(total_G_bytes,3)  as total_G_bytes,
  round(actual_G_bytes,3) as actual_G_bytes,
  round(total_G_bytes - nvl(used_G_bytes,0),3) as free_G_bytes,
  round(nvl(used_G_bytes,0),3) as used_G_bytes,
  'SQLDEV:GAUGE:0:100:0:0:'||ROUND((nvl(used_G_bytes,0) / nvl(total_G_bytes,0)) * 100, 1)  as Percent_Used_gauge,
  ROUND((nvl(used_G_bytes,0) / nvl(total_G_bytes,0)) * 100, 1) as Percent_Used,
  number_of_files
FROM (
    SELECT
      con_id, tablespace_name,
      SUM (greatest(bytes, maxbytes)) / (1024 * 1024 * 1024) as total_G_bytes,
	  SUM (bytes) / (1024 * 1024 * 1024) as actual_G_bytes,
	  count (*) as number_of_files
    FROM cdb_data_files
    where (con_id=:CON_ID or :CON_ID is null)
    GROUP BY
      con_id, tablespace_name
	union all
    SELECT
      con_id, tablespace_name,
      SUM (greatest(bytes, maxbytes)) / (1024 * 1024 * 1024) as total_G_bytes,
	  SUM (bytes) / (1024 * 1024 * 1024) as actual_G_bytes,
	  count (*) as number_of_files
    FROM cdb_temp_files
    where (con_id=:CON_ID or :CON_ID is null)
    GROUP BY
      con_id,tablespace_name	
  ) a
left outer join (
    SELECT 
	  con_id, TABLESPACE_NAME, 
	  sum(bytes) / (1024 * 1024 * 1024) as used_G_bytes
    from cdb_segments
    where (con_id=:CON_ID or :CON_ID is null)
    group by 
	  con_id, TABLESPACE_NAME
    UNION ALL
    SELECT
      con_id, tablespace_name,
      (tablespace_size - free_space) / (1024 * 1024 * 1024) used_G_bytes
    FROM cdb_temp_free_space
    where (con_id=:CON_ID or :CON_ID is null)
	--where tablespace_name = 'USERS'
    --GROUP BY
    --  tablespace_name	
  ) b ON a.tablespace_name = b.tablespace_name and a.con_id=b.con_id
  order by a.con_id, a.tablespace_name]]></sql>
					<binds>
						<bind id="CON_ID">
							<prompt><![CDATA[CON_ID]]></prompt>
							<tooltip><![CDATA[CON_ID]]></tooltip>
							<value><![CDATA[NULL_VALUE]]></value>
							<bracket><![CDATA[null]]></bracket>
						</bind>
					</binds>
				</query>
			</display>
		</display>
	</folder>
</folder>
</displays>