<?xml version="1.0" encoding="UTF-8" ?>
<displays>
<folder>
	<name><![CDATA[DBA]]></name>
	<tooltip><![CDATA[DBA]]></tooltip>
	<description><![CDATA[ ]]></description>
		<display id="e925b2bd-018c-1000-800d-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[ASM]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select --INST_ID, GROUP_NUMBER, NAME, SECTOR_SIZE, LOGICAL_SECTOR_SIZE, BLOCK_SIZE, ALLOCATION_UNIT_SIZE, STATE, TYPE, TOTAL_MB, FREE_MB, HOT_USED_MB, COLD_USED_MB, REQUIRED_MIRROR_FREE_MB, USABLE_FILE_MB, OFFLINE_DISKS, COMPATIBILITY, DATABASE_COMPATIBILITY, VOTING_FILES, CON_ID
*
from gv$asm_diskgroup]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Disks]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from v$asm_disk 
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Files]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$asm_alias a join gv$asm_file f on a.file_number=f.file_number 
where a.GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null 
order by bytes desc]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Disk stats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_DISK_STAT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Disk IO stats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_DISK_IOSTAT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Client]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_CLIENT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Diskgroup stats]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_DISKGROUP_STAT
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Template]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$ASM_TEMPLATE
where GROUP_NUMBER=:GROUP_NUMBER or :GROUP_NUMBER is null]]></sql>
				<binds>
					<bind id="GROUP_NUMBER">
						<prompt><![CDATA[GROUP_NUMBER]]></prompt>
						<tooltip><![CDATA[GROUP_NUMBER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="e9970c1f-018c-1000-802d-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[Scheduler]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select j.*,
'exec DBMS_SCHEDULER.enable(name=>''"'||owner||'"."'||job_name||'"'');' enable_job,
'exec DBMS_SCHEDULER.disable(name=>''"'||owner||'"."'||job_name||'"'', force => TRUE);' disable_job,
'exec DBMS_SCHEDULER.RUN_JOB(name=>''"'||owner||'"."'||job_name||'"'', USE_CURRENT_SESSION => FALSE);' run_job,
'exec DBMS_SCHEDULER.STOP_JOB(name=>''"'||owner||'"."'||job_name||'"'',  force => TRUE);' stop_job,
'exec DBMS_SCHEDULER.DROP_JOB(name=>''"'||owner||'"."'||job_name||'"'',  force => TRUE, defer => TRUE);' drop_job
from dba_scheduler_jobs j
order by owner, job_name]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Running jobs]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_RUNNING_JOBS
--where ((OWNER=:OWNER and JOB_name=:JOB_NAME) or (:OWNER is null and :JOB_NAME is null))
order by owner, job_name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Job run details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_JOB_RUN_DETAILS
where ((OWNER=:OWNER and JOB_name=:JOB_NAME) or (:OWNER is null and :JOB_NAME is null))
order by LOG_ID desc --,LOG_DATE desc]]></sql>
				<binds>
					<bind id="OWNER">
						<prompt><![CDATA[OWNER]]></prompt>
						<tooltip><![CDATA[OWNER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="JOB_NAME">
						<prompt><![CDATA[JOB_NAME]]></prompt>
						<tooltip><![CDATA[JOB_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Job log]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_JOB_LOG
where ((OWNER=:OWNER and JOB_name=:JOB_NAME) or (:OWNER is null and :JOB_NAME is null))
order by LOG_ID desc --,LOG_DATE desc]]></sql>
				<binds>
					<bind id="OWNER">
						<prompt><![CDATA[OWNER]]></prompt>
						<tooltip><![CDATA[OWNER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="JOB_NAME">
						<prompt><![CDATA[JOB_NAME]]></prompt>
						<tooltip><![CDATA[JOB_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Global attribute]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from DBA_SCHEDULER_GLOBAL_ATTRIBUTE
order by ATTRIBUTE_NAME]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Instance parameters]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT * FROM GV$PARAMETER
--where 
--name like 'job%'
order by isdefault, name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Chart" enable="true">
			<name><![CDATA[Job duration and CPU]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<Y1AXIS_TITLE_TEXT><![CDATA[[s]]]></Y1AXIS_TITLE_TEXT>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<Y1AXIS_REFOBJ_COUNT><![CDATA[0]]></Y1AXIS_REFOBJ_COUNT>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<Y1AXIS_REFOBJ_LINE_VALUE><![CDATA[\]]></Y1AXIS_REFOBJ_LINE_VALUE>
				<DATA_MAP_COLUMNS><![CDATA[\,"ACTUAL_START_DATE","ACTUAL_START_DATE",]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y1AXIS_REFOBJ_VISIBLE><![CDATA[\]]></Y1AXIS_REFOBJ_VISIBLE>
				<DATA_MAP_COLNAMES><![CDATA[\,"ACTUAL_START_DATE","ADDITIONAL_INFO","BINARY_ERRORS","BINARY_OUTPUT","CPU_USED","CPU_USED_SEC","CREDENTIAL_NAME","CREDENTIAL_OWNER","DESTINATION","DESTINATION_OWNER","ERROR#","ERRORS","INSTANCE_ID","JOB_NAME","JOB_SUBNAME","LOG_DATE","LOG_ID","OUTPUT","OWNER","REQ_START_DATE","RUN_DURATION","RUN_DURATION_SEC","SESSION_ID","SLAVE_PID","STATUS"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,DURATION,CPU,]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[3]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<XAXIS_TITLE><![CDATA[false]]></XAXIS_TITLE>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"RUN_DURATION_SEC","CPU_USED_SEC",]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_REFOBJ_TEXT><![CDATA[\]]></Y1AXIS_REFOBJ_TEXT>
				<Y1AXIS_REFOBJ_WIDTH><![CDATA[\]]></Y1AXIS_REFOBJ_WIDTH>
				<Y1AXIS_TITLE><![CDATA[true]]></Y1AXIS_TITLE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				<Y1AXIS_REFOBJ_COLOR><![CDATA[\]]></Y1AXIS_REFOBJ_COLOR>
			</CustomValues>
			<query>
				<sql><![CDATA[select j.*, 
abs( extract( second from RUN_DURATION ) 
          + extract( minute from RUN_DURATION ) * 60 
          + extract( hour from RUN_DURATION ) * 60 * 60 
          + extract( day from RUN_DURATION ) * 60 * 60 * 24
            ) as RUN_DURATION_SEC,
abs( extract( second from CPU_USED ) 
          + extract( minute from CPU_USED ) * 60 
          + extract( hour from CPU_USED ) * 60 * 60 
          + extract( day from CPU_USED ) * 60 * 60 * 24
            ) as CPU_USED_SEC
from DBA_SCHEDULER_JOB_RUN_DETAILS j
where 
  (OWNER=:OWNER and JOB_name=:JOB_NAME) 
order by LOG_DATE]]></sql>
				<binds>
					<bind id="OWNER">
						<prompt><![CDATA[OWNER]]></prompt>
						<tooltip><![CDATA[OWNER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="JOB_NAME">
						<prompt><![CDATA[JOB_NAME]]></prompt>
						<tooltip><![CDATA[JOB_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="e9974232-018c-1000-802e-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[Longops]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select sysdate, 
       inst_id, 
       sid, 
       serial#, 
       OPNAME,
       sofar,
       decode(totalwork,0,9999999999,totalwork) as totalwork, 
       trunc((sofar/decode(totalwork,0,9999999999,totalwork))*100) as percent_done, 
       round(TIME_REMAINING/60,1) as "MINUTES_REMAINING"  
from gv$session_longops 
where sofar<>totalwork 
order by inst_id, sid, serial#]]></sql>
		</query>
	</display>
	<display id="ea0dfa57-018c-1000-8030-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[Autotasks]]></name>
		<description><![CDATA[Details on 11g Autotasks (Stats and Advisors)]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT *
  FROM dba_autotask_client]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[History]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select *
  FROM dba_autotask_job_history
 where client_name like :CLIENT_NAME
 ORDER BY job_start_time DESC]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Job History]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_autotask_job_history
 WHERE client_name = :CLIENT_NAME
 ORDER BY job_start_time DESC]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Window History]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_autotask_window_history
 ORDER BY window_start_time DESC]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Program]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[vertical]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT * FROM DBA_SCHEDULER_PROGRAMS
 WHERE UPPER( program_name ) IN ( SELECT UPPER( TASK_NAME ) FROM dba_autotask_task WHERE client_name = :CLIENT_NAME )]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Tasks]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_autotask_task
 WHERE client_name = :CLIENT_NAME]]></sql>
				<binds>
					<bind id="CLIENT_NAME">
						<prompt><![CDATA[CLIENT_NAME]]></prompt>
						<tooltip><![CDATA[CLIENT_NAME]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="ea0e2821-018c-1000-8031-ac120052d4bc" type="" style="plsql-dbms_output" enable="true">
		<name><![CDATA[Log Switch Heat Map]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
		</CustomValues>
		<query>
			<sql><![CDATA[-- David Mann
-- http://ba6.us
-- 24-JUL-2012

-- Archived Log Heat Map for past 31 Days
-- Requires access to v$archived_log
-- Spool output to file and view with browser 
-- or use SQL Developer PL/SQL DBMS_OUTPUT report type

-- I tried to use a scripted stylesheet but SQL Dev wouldn't cooperate so
-- that is my excuse for all of the ugly inline CSS. For now :) 

DECLARE
  -- How many days of log history to show?
  myHist CONSTANT NUMBER := 31;
  ----------------------------------------
  myMax NUMBER;
  myDBName VARCHAR2(16);

  FUNCTION DataCell ( P_Value NUMBER, P_Max NUMBER) RETURN VARCHAR2 IS
   myReturn VARCHAR2(128);
   myColorVal NUMBER;
   myColorHex VARCHAR2(16);
  BEGIN

    myColorVal := ROUND( 255-FLOOR(255 * (P_VALUE / P_MAX)));
    myColorHex := LPAD(TRIM(TO_CHAR(myColorVal, 'XX')) ,2,'0');
    
    IF P_Value = P_Max THEN
      myColorHex := '00';
    END IF;
    

    myReturn := '<TD STYLE="background-color: #FF'||
                myColorHex||
                myColorHex||
                '; font-family: monospace">'||P_Value||'</TD>';


    RETURN myReturn;
  END DataCell;

BEGIN

  DBMS_OUTPUT.ENABLE(100000);

  SELECT ROUND(MAX(COUNT(*)))
    INTO myMax
    FROM v$log_history 
  WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
  GROUP BY TO_CHAR(first_time,'YYYY-MM-DD HH24');
  
  SELECT NAME INTO myDBName FROM V$DATABASE;

  DBMS_OUTPUT.PUT_LINE('<HTML>');
  DBMS_OUTPUT.PUT_LINE('<H1>Archived Log Heat Map - '||myDBName||'  - Past 31 days</H1>');
  DBMS_OUTPUT.PUT_LINE('<TABLE>');
  DBMS_OUTPUT.PUT_LINE('<TR>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">Date / Hour</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">00</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">01</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">02</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">03</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">04</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">05</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">06</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">07</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">08</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">09</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">10</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">11</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">12</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">13</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">14</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">15</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">16</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">17</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">18</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">19</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">20</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">21</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">22</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">23</TD>');
  DBMS_OUTPUT.PUT_LINE('<TR>');

  FOR cur IN (

    select trunc(first_time) AS Day,
    sum(DECODE(to_char(first_time, 'HH24'), '00', 1, 0)) AS "00",
    sum(DECODE(to_char(first_time, 'HH24'), '01', 1, 0)) AS "01",
    sum(DECODE(to_char(first_time, 'HH24'), '02', 1, 0)) AS "02",
    sum(DECODE(to_char(first_time, 'HH24'), '03', 1, 0)) AS "03",
    sum(DECODE(to_char(first_time, 'HH24'), '04', 1, 0)) AS "04",
    sum(DECODE(to_char(first_time, 'HH24'), '05', 1, 0)) AS "05",
    sum(DECODE(to_char(first_time, 'HH24'), '06', 1, 0)) AS "06",
    sum(DECODE(to_char(first_time, 'HH24'), '07', 1, 0)) AS "07",
    sum(DECODE(to_char(first_time, 'HH24'), '08', 1, 0)) AS "08",
    sum(DECODE(to_char(first_time, 'HH24'), '09', 1, 0)) AS "09",
    sum(DECODE(to_char(first_time, 'HH24'), '10', 1, 0)) AS "10",
    sum(DECODE(to_char(first_time, 'HH24'), '11', 1, 0)) AS "11",
    sum(DECODE(to_char(first_time, 'HH24'), '12', 1, 0)) AS "12",
    sum(DECODE(to_char(first_time, 'HH24'), '13', 1, 0)) AS "13",
    sum(DECODE(to_char(first_time, 'HH24'), '14', 1, 0)) AS "14",
    sum(DECODE(to_char(first_time, 'HH24'), '15', 1, 0)) AS "15",
    sum(DECODE(to_char(first_time, 'HH24'), '16', 1, 0)) AS "16",
    sum(DECODE(to_char(first_time, 'HH24'), '17', 1, 0)) AS "17",
    sum(DECODE(to_char(first_time, 'HH24'), '18', 1, 0)) AS "18",
    sum(DECODE(to_char(first_time, 'HH24'), '19', 1, 0)) AS "19",
    sum(DECODE(to_char(first_time, 'HH24'), '20', 1, 0)) AS "20",
    sum(DECODE(to_char(first_time, 'HH24'), '21', 1, 0)) AS "21",
    sum(DECODE(to_char(first_time, 'HH24'), '22', 1, 0)) AS "22",
    sum(DECODE(to_char(first_time, 'HH24'), '23', 1, 0)) AS "23"
    FROM v$log_history
    WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
    GROUP BY trunc(first_time)
    ORDER BY TRUNC(FIRST_TIME) DESC
  )
  LOOP
    DBMS_OUTPUT.PUT_LINE('<TR>');
    DBMS_OUTPUT.PUT_LINE('<TD style="font-family: monospace; font-weight: bold; background-color:#DEDEDE">'||TO_CHAR(cur.Day,'DD-MON-YYYY')||'<EM></TD>');
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."00", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."01", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."02", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."03", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."04", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."05", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."06", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."07", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."08", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."09", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."10", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."11", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."12", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."13", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."14", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."15", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."16", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."17", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."18", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."19", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."20", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."21", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."22", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."23", myMax) );
    DBMS_OUTPUT.PUT_LINE('</TR>');
  END LOOP;

  DBMS_OUTPUT.PUT_LINE('</TABLE>');
  DBMS_OUTPUT.PUT_LINE('</HTML>');


END;]]></sql>
		</query>
	</display>
	<display id="ea0ee2e6-018c-1000-8032-ac120052d4bc" type="" style="plsql-dbms_output" enable="true">
		<name><![CDATA[DBMS_STATS Report]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
		</CustomValues>
		<query>
			<sql><![CDATA[DECLARE  
  l_offset     INT := 1;
  l_theclob    CLOB;
BEGIN
  dbms_output.enable(1000000);
  select SYS.DBMS_STATS.REPORT_STATS_OPERATIONS(
         since => systimestamp - 1
       , until => systimestamp
       , detail_level => 'ALL'
       , format => 'HTML' ) as report
    into l_theclob
    from dual;
  loop  
        exit when l_offset > dbms_lob.getlength(l_theclob);  
        dbms_output.put_line( dbms_lob.substr( l_theclob, 255, l_offset ) );  
        l_offset := l_offset + 255;  
  end loop;  
END;]]></sql>
		</query>
	</display>
	<display id="ea0ff3b7-018c-1000-8034-ac120052d4bc" type="" style="Chart" enable="true">
		<name><![CDATA[FRA]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<Y1AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y1AXIS_SCALE_INCREMENT>
			<DATA_MAP_COLNAMES><![CDATA[\,"Claimed","Reclaimable","Unused"]]></DATA_MAP_COLNAMES>
			<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
			<STYLE><![CDATA[Default]]></STYLE>
			<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
			<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
			<PLOT_SERIES_OPTIONS_COLOR><![CDATA[\,-16737997,-3394816,-6710887,-16751002,-26368]]></PLOT_SERIES_OPTIONS_COLOR>
			<XAXIS_SCALE_INCREMENT><![CDATA[20.0]]></XAXIS_SCALE_INCREMENT>
			<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
			<PLOT_DATALABELS_SLICE_TYPE><![CDATA[PERCENT_VALUE]]></PLOT_DATALABELS_SLICE_TYPE>
			<PLOT_DATALABELS_SLICE_POSITION><![CDATA[OUTSIDE_SLICE_LINE]]></PLOT_DATALABELS_SLICE_POSITION>
			<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
			<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
			<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
			<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
			<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
			<TYPE><![CDATA[RING]]></TYPE>
			<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
			<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
			<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
		</CustomValues>
		<query>
			<sql><![CDATA[select NULL "FRA", 'Reclaimable' AS attr, ROUND(space_reclaimable/1024/1024/1024, 2) GB
  from v$recovery_file_dest def
union all
select NULL "FRA", 'Claimed', ROUND((space_used - space_reclaimable)/1024/1024/1024, 2)
  from v$recovery_file_dest def
union all
select NULL "FRA", 'Unused', ROUND((space_limit - space_used)/1024/1024/1024, 2)
  from v$recovery_file_dest def]]></sql>
		</query>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[FRASummary]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select name, ROUND(SPACE_LIMIT/1024/1024/1024,2) "Space Limit (GB)", 
round(SPACE_USED/1024/1024/1024,2) "Used Space(GB)",
decode(nvl(space_used,0),0,0,round((space_used/space_limit) * 100)) pct_used,
round(SPACE_RECLAIMABLE/1024/1024/1024,2) "SPACE_RECLAIMABLE (GB)" ,
(select round(ESTIMATED_FLASHBACK_SIZE/1024/1024/1024,2) 
from V$FLASHBACK_DATABASE_LOG) "Estimated Space (GB)",
number_of_files as "Number of files"
from V$RECOVERY_FILE_DEST]]></sql>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[FRAUsage]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from v$flash_recovery_area_usage
order by percent_space_used desc]]></sql>
			</query>
		</display>
	</display>
	<display id="ea111e7e-018c-1000-8035-ac120052d4bc" type="" style="Table" enable="true">
		<name><![CDATA[LongOps-Gauge]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#, NVL( sql_id, '[NULL]' ) AS sql_id
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#
     , sql_hash_value
     --, NVL( sql_id, '[NULL]' ) AS sql_id
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#
     , sql_hash_value
     , sql_address
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<query>
			<sql><![CDATA[SELECT 'SQLDEV:GAUGE:0:100:0:100:'
       || DECODE( sofar, NULL, 100,
          DECODE( totalwork, 0, 100, NULL, sofar, ROUND(sofar/totalwork*100,0))) as progress
     , username, elapsed_seconds "Elapsed/s", time_remaining "Remaining/s", message
     , sid, serial#, NVL( sql_id, '[NULL]' ) AS sql_id
     , to_char(last_update_time, 'yyyy-mm-dd hh24:mi:ss') last_update_time
     , sql_exec_start, sql_plan_line_id, sql_exec_id
  FROM gv$session_longops
 WHERE 1=1
--   AND sofar <> totalwork         -- if you want to see active operations only
 ORDER BY SIGN( sofar - NVL( totalwork, 0 )), last_update_time DESC
 --target, sid]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Session Detail]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[vertical]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM gv$session
 WHERE sid = :SID
   AND serial# = :SERIAL#]]></sql>
				<binds>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Wait Summary]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT s.username
     , se.event
     , SUM( total_waits ) total_waits
     , ROUND( SUM( time_waited )/100, 2 ) "Time waited / s"
     , AVG( average_wait )*10 "avg_wait / ms"
     , MAX( se.wait_class ) wait_class
  FROM gv$session_event se
     , gv$session s
 WHERE s.sid      = :SID
   AND s.serial#  = :SERIAL#
   AND se.sid     = s.sid
   AND se.inst_id = s.inst_id
--   AND se.wait_class <> 'Idle'
--   AND s.username IS NOT NULL
 GROUP BY s.username, se.event
 ORDER BY MAX( DECODE( se.wait_class, 'Idle', 1, 0 )), "Time waited / s" DESC]]></sql>
				<binds>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL-Detail]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[vertical]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from gv$sql where SQL_ID = :SQL_ID]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<query>
				<sql><![CDATA[select * from gv$sql where HASH_VALUE = :SQL_HASH_VALUE]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Explain Plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[-- Displays SQL plans from all cluster nodes when on RAC.
-- Captured while still in memory. Metrics below are for ALL executions of each child cursor.
-- If STATISTICS_LEVEL was set to ALL at the time of the hard-parse then A-Rows column is populated.
SELECT RPAD('Inst: '||v.inst_id, 9)||' '||RPAD('Child: '||v.child_number, 11) inst_child, t.plan_table_output
  FROM gv$sql v
     , TABLE( DBMS_XPLAN.DISPLAY('gv$sql_plan_statistics_all', NULL, 'ADVANCED ALLSTATS ALL'
            , 'inst_id = '||v.inst_id||' AND sql_id = '''||v.sql_id||''' AND child_number = '||v.child_number)) t
 WHERE v.sql_id = NVL( :SQL_ID, 'NULL!' )
   AND v.loaded_versions > 0]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
			<query>
				<sql><![CDATA[SELECT child_number, id , lpad (' ', depth) || operation operation , options , object_name , optimizer , cost
  FROM V$SQL_PLAN 
 WHERE hash_value = :SQL_HASH_VALUE
   AND address = :SQL_ADDRESS
 ORDER BY child_number, id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Code" enable="true">
			<name><![CDATA[SQL-Monitor (Text)]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT CASE WHEN :SQL_ID = '[NULL]' THEN TO_CLOB( 'SQL_ID IS NULL' )
       ELSE dbms_sqltune.report_sql_monitor( type=>'TEXT', sql_id => :SQL_ID
          , SESSION_ID => :SID, SESSION_SERIAL => :SERIAL#, SQL_EXEC_ID => :SQL_EXEC_ID )
       END AS report
  FROM dual]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_EXEC_ID">
						<prompt><![CDATA[SQL_EXEC_ID]]></prompt>
						<tooltip><![CDATA[SQL_EXEC_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="plsql-dbms_output" enable="true">
			<name><![CDATA[SQL-Monitor (HTML)]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[DECLARE
  l_report CLOB := dbms_sqltune.report_sql_monitor( type=>'HTML', sql_id => :SQL_ID
    , SESSION_ID => :SID, SESSION_SERIAL => :SERIAL#, SQL_EXEC_ID => :SQL_EXEC_ID );
  l_offset PLS_INTEGER := 1;
  l_length PLS_INTEGER := NVL(dbms_lob.getlength(l_report),0);
  l_chunk CONSTANT PLS_INTEGER := 8191;
BEGIN
  dbms_output.enable(NULL);
  --dbms_output.put_line('Len: '||l_length);
  WHILE l_offset < l_length LOOP
    --dbms_output.put_line('Off: '||l_offset);
    dbms_output.put_line(dbms_lob.substr( l_report, l_chunk, l_offset));
    l_offset := l_offset + l_chunk;
  END LOOP;
  --dbms_output.put_line('');
END;]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_EXEC_ID">
						<prompt><![CDATA[SQL_EXEC_ID]]></prompt>
						<tooltip><![CDATA[SQL_EXEC_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL-Monitor (Flash)]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT CASE WHEN :SQL_ID = '[NULL]' THEN TO_CLOB( 'SQL_ID IS NULL' )
       ELSE dbms_sqltune.report_sql_monitor( type=>'EM', sql_id => :SQL_ID
          , SESSION_ID => :SID, SESSION_SERIAL => :SERIAL#, SQL_EXEC_ID => :SQL_EXEC_ID )
       END AS report
  FROM dual]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SID">
						<prompt><![CDATA[SID]]></prompt>
						<tooltip><![CDATA[SID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SERIAL#">
						<prompt><![CDATA[SERIAL#]]></prompt>
						<tooltip><![CDATA[SERIAL#]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_EXEC_ID">
						<prompt><![CDATA[SQL_EXEC_ID]]></prompt>
						<tooltip><![CDATA[SQL_EXEC_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="f806d94e-018c-1000-800b-0a00011a7638" type="" style="Table" enable="true">
		<name><![CDATA[Storage - summary]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT typ, Tablespace_LogGroup, SUM(gb) GB, sum(files) as files FROM
(
SELECT 'Datafiles' typ, tablespace_name Tablespace_LogGroup,  ROUND(  bytes/1024/1024/1024, 2 ) GB, 1 as files
  FROM dba_data_files
UNION ALL
SELECT 'Tempfiles' typ, tablespace_name Tablespace_LogGroup, ROUND( bytes/1024/1024/1024, 2 ) GB, 1 as files
  FROM dba_temp_files
UNION  ALL
SELECT 'Logfiles' typ, to_char(group#) Tablespace_LogGroup, ROUND( bytes*members/1024/1024/1024, 2 ) GB, members as files
  FROM v$log
UNION ALL
SELECT 'Controlfiles' typ, 'Controlfile' Tablespace_LogGroup, ROUND( BLOCK_SIZE*FILE_SIZE_BLKS/1024/1024/1024, 2 ) GB, 1 as files
  FROM v$controlfile
)
GROUP BY ROLLUP(typ, Tablespace_LogGroup)
order by typ, Tablespace_LogGroup, GB desc]]></sql>
		</query>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[DataFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
FROM dba_data_files
where TABLESPACE_NAME= :TABLESPACE_LOGGROUP OR :TABLESPACE_LOGGROUP IS NULL
ORDER BY TABLESPACE_NAME, FILE_ID]]></sql>
				<binds>
					<bind id="TABLESPACE_LOGGROUP">
						<prompt><![CDATA[TABLESPACE_LOGGROUP]]></prompt>
						<tooltip><![CDATA[TABLESPACE_LOGGROUP]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[TempFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM dba_temp_files
where TABLESPACE_NAME= :TABLESPACE_LOGGROUP OR :TABLESPACE_LOGGROUP IS NULL
ORDER BY TABLESPACE_NAME, FILE_ID]]></sql>
				<binds>
					<bind id="TABLESPACE_LOGGROUP">
						<prompt><![CDATA[TABLESPACE_LOGGROUP]]></prompt>
						<tooltip><![CDATA[TABLESPACE_LOGGROUP]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[LogGroups]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM v$log
where (VALIDATE_CONVERSION(:TABLESPACE_LOGGROUP AS NUMBER) = 1) and ( group#= to_number(:TABLESPACE_LOGGROUP) OR :TABLESPACE_LOGGROUP IS NULL)
ORDER BY group#, thread#]]></sql>
				<binds>
					<bind id="TABLESPACE_LOGGROUP">
						<prompt><![CDATA[TABLESPACE_LOGGROUP]]></prompt>
						<tooltip><![CDATA[TABLESPACE_LOGGROUP]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[LogFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM v$logfile
where (VALIDATE_CONVERSION(:TABLESPACE_LOGGROUP AS NUMBER) = 1) and ( group#= to_number(:TABLESPACE_LOGGROUP) OR :TABLESPACE_LOGGROUP IS NULL)
ORDER BY group#, MEMBER]]></sql>
				<binds>
					<bind id="TABLESPACE_LOGGROUP">
						<prompt><![CDATA[TABLESPACE_LOGGROUP]]></prompt>
						<tooltip><![CDATA[TABLESPACE_LOGGROUP]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="null" type="" style="plsql-dbms_output" enable="true">
			<name><![CDATA[LogSwitchHeatMap]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[-- David Mann
-- http://ba6.us
-- 24-JUL-2012

-- Archived Log Heat Map for past 31 Days
-- Requires access to v$archived_log
-- Spool output to file and view with browser 
-- or use SQL Developer PL/SQL DBMS_OUTPUT report type

-- I tried to use a scripted stylesheet but SQL Dev wouldn't cooperate so
-- that is my excuse for all of the ugly inline CSS. For now :) 

DECLARE
  -- How many days of log history to show?
  myHist CONSTANT NUMBER := 31;
  ----------------------------------------
  myMax NUMBER;
  myDBName VARCHAR2(16);

  FUNCTION DataCell ( P_Value NUMBER, P_Max NUMBER) RETURN VARCHAR2 IS
   myReturn VARCHAR2(128);
   myColorVal NUMBER;
   myColorHex VARCHAR2(16);
  BEGIN

    myColorVal := ROUND( 255-FLOOR(255 * (P_VALUE / P_MAX)));
    myColorHex := LPAD(TRIM(TO_CHAR(myColorVal, 'XX')) ,2,'0');
    
    IF P_Value = P_Max THEN
      myColorHex := '00';
    END IF;
    

    myReturn := '<TD STYLE="background-color: #FF'||
                myColorHex||
                myColorHex||
                '; font-family: monospace">'||P_Value||'</TD>';


    RETURN myReturn;
  END DataCell;

BEGIN

  DBMS_OUTPUT.ENABLE(100000);

  SELECT ROUND(MAX(COUNT(*)))
    INTO myMax
    FROM v$log_history 
  WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
  GROUP BY TO_CHAR(first_time,'YYYY-MM-DD HH24');
  
  SELECT NAME INTO myDBName FROM V$DATABASE;

  DBMS_OUTPUT.PUT_LINE('<HTML>');
  DBMS_OUTPUT.PUT_LINE('<H1>Archived Log Heat Map - '||myDBName||'  - Past 31 days</H1>');
  DBMS_OUTPUT.PUT_LINE('<TABLE>');
  DBMS_OUTPUT.PUT_LINE('<TR>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">Date / Hour</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">00</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">01</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">02</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">03</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">04</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">05</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">06</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">07</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">08</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">09</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">10</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">11</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">12</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">13</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">14</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">15</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">16</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">17</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">18</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">19</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">20</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">21</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">22</TD>');
  DBMS_OUTPUT.PUT_LINE('<TD STYLE="font-family: monospace; font-weight: bold; background-color:#DEDEDE">23</TD>');
  DBMS_OUTPUT.PUT_LINE('<TR>');

  FOR cur IN (

    select trunc(first_time) AS Day,
    sum(DECODE(to_char(first_time, 'HH24'), '00', 1, 0)) AS "00",
    sum(DECODE(to_char(first_time, 'HH24'), '01', 1, 0)) AS "01",
    sum(DECODE(to_char(first_time, 'HH24'), '02', 1, 0)) AS "02",
    sum(DECODE(to_char(first_time, 'HH24'), '03', 1, 0)) AS "03",
    sum(DECODE(to_char(first_time, 'HH24'), '04', 1, 0)) AS "04",
    sum(DECODE(to_char(first_time, 'HH24'), '05', 1, 0)) AS "05",
    sum(DECODE(to_char(first_time, 'HH24'), '06', 1, 0)) AS "06",
    sum(DECODE(to_char(first_time, 'HH24'), '07', 1, 0)) AS "07",
    sum(DECODE(to_char(first_time, 'HH24'), '08', 1, 0)) AS "08",
    sum(DECODE(to_char(first_time, 'HH24'), '09', 1, 0)) AS "09",
    sum(DECODE(to_char(first_time, 'HH24'), '10', 1, 0)) AS "10",
    sum(DECODE(to_char(first_time, 'HH24'), '11', 1, 0)) AS "11",
    sum(DECODE(to_char(first_time, 'HH24'), '12', 1, 0)) AS "12",
    sum(DECODE(to_char(first_time, 'HH24'), '13', 1, 0)) AS "13",
    sum(DECODE(to_char(first_time, 'HH24'), '14', 1, 0)) AS "14",
    sum(DECODE(to_char(first_time, 'HH24'), '15', 1, 0)) AS "15",
    sum(DECODE(to_char(first_time, 'HH24'), '16', 1, 0)) AS "16",
    sum(DECODE(to_char(first_time, 'HH24'), '17', 1, 0)) AS "17",
    sum(DECODE(to_char(first_time, 'HH24'), '18', 1, 0)) AS "18",
    sum(DECODE(to_char(first_time, 'HH24'), '19', 1, 0)) AS "19",
    sum(DECODE(to_char(first_time, 'HH24'), '20', 1, 0)) AS "20",
    sum(DECODE(to_char(first_time, 'HH24'), '21', 1, 0)) AS "21",
    sum(DECODE(to_char(first_time, 'HH24'), '22', 1, 0)) AS "22",
    sum(DECODE(to_char(first_time, 'HH24'), '23', 1, 0)) AS "23"
    FROM v$log_history
    WHERE trunc(FIRST_TIME) >= trunc(sysdate - myHist)
    GROUP BY trunc(first_time)
    ORDER BY TRUNC(FIRST_TIME) DESC
  )
  LOOP
    DBMS_OUTPUT.PUT_LINE('<TR>');
    DBMS_OUTPUT.PUT_LINE('<TD style="font-family: monospace; font-weight: bold; background-color:#DEDEDE">'||TO_CHAR(cur.Day,'YYYY-MM-DD')||'<EM></TD>');
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."00", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."01", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."02", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."03", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."04", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."05", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."06", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."07", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."08", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."09", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."10", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."11", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."12", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."13", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."14", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."15", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."16", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."17", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."18", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."19", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."20", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."21", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."22", myMax) );
    DBMS_OUTPUT.PUT_LINE( DataCell(cur."23", myMax) );
    DBMS_OUTPUT.PUT_LINE('</TR>');
  END LOOP;

  DBMS_OUTPUT.PUT_LINE('</TABLE>');
  DBMS_OUTPUT.PUT_LINE('</HTML>');


END;]]></sql>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[LogSwitchHistory]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from gv$log_history 
order by sequence# desc]]></sql>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[ArchivedLogs]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from 
GV$ARCHIVED_LOG 
order by recid desc]]></sql>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[ControlFiles]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM v$controlfile
ORDER by name]]></sql>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[DiagTraceFile]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * 
from GV$DIAG_TRACE_FILE]]></sql>
			</query>
		</display>
	</display>
</folder>
</displays>